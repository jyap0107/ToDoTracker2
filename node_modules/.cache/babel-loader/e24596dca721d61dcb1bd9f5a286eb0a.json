{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\cse316hw2\\\\todo_tracker_hw2\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport DeleteListConfirmation from './components/DeleteListConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\n  import ItemsListComponent from './components/ItemsListComponent'\r\n  import ListsComponent from './components/ListsComponent'\r\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList\n      });\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.highListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.makeNewToDoListItem = () => {\n      let newToDoListItem = {\n        description: \"No Description\",\n        dueDate: \"none\",\n        status: \"incomplete\"\n      };\n      return newToDoListItem;\n    };\n\n    this.deleteCurrentList = () => {\n      console.log(\"called\");\n      this.state.toDoLists.splice(0, 1);\n      this.setState({\n        toDoLists: this.state.toDoLists,\n        currentList: {\n          items: []\n        },\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.swapToInput = (id, clickName) => {\n      console.log(\"poopy\");\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.swapToDiv = id => {\n      console.log(\"poopy\");\n      this.setState({\n        clickedOnDescription: false,\n        clickedId: id\n      });\n    };\n\n    this.handleDescriptionChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.description = value : item.description = item.description);\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.toggleDeleteListConfirmation = () => {\n      console.log(this.state.currentList);\n\n      if (this.state.currentList.items.length != 0) {\n        this.setState({\n          showModal: !this.state.showModal\n        });\n      }\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      useVerboseFeedback: true,\n      showModal: false,\n      clickedOn: \"\",\n      clickedId: -1\n    };\n  } // WILL LOAD THE SELECTED LIST\n\n\n  render() {\n    let items = this.state.currentList.items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(DeleteListConfirmation, {\n        showModal: this.state.showModal,\n        closeModal: this.state.showModal,\n        deleteCurrentList: this.deleteCurrentList,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation,\n        currentListActive: this.state.currentList.items.length > 0,\n        swapToInput: this.swapToInput,\n        swapToDiv: this.swapToDiv,\n        clickedOnDescription: this.state.clickedOnDescription,\n        clickedId: this.state.clickedId,\n        handleDescriptionChange: this.handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/johnn/cse316hw2/todo_tracker_hw2/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","DeleteListConfirmation","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","highListId","name","items","makeNewToDoListItem","newToDoListItem","description","dueDate","status","deleteCurrentList","splice","showModal","swapToInput","clickName","clickedOn","clickedId","swapToDiv","clickedOnDescription","handleDescriptionChange","value","map","item","toDoListsString","JSON","stringify","localStorage","setItem","toggleDeleteListConfirmation","length","tps","recentLists","getItem","parse","highListItemId","i","j","toDoListItem","nextListItemId","useVerboseFeedback","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport testData from './test/testData.json'\r\nimport jsTPS from './common/jsTPS'\r\n\r\n// THESE ARE OUR REACT COMPONENTS\r\nimport Navbar from './components/Navbar'\r\nimport LeftSidebar from './components/LeftSidebar'\r\nimport Workspace from './components/Workspace'\r\nimport DeleteListConfirmation from './components/DeleteListConfirmation'\r\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\nimport ItemsListComponent from './components/ItemsListComponent'\r\nimport ListsComponent from './components/ListsComponent'\r\n*/}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // ALWAYS DO THIS FIRST\r\n    super(props);\r\n\r\n    // DISPLAY WHERE WE ARE\r\n    console.log(\"App constructor\");\r\n\r\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\r\n    this.tps = new jsTPS();\r\n\r\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\r\n    let recentLists = localStorage.getItem(\"recentLists\");\r\n    console.log(\"recentLists: \" + recentLists);\r\n    if (!recentLists) {\r\n      recentLists = JSON.stringify(testData.toDoLists);\r\n      localStorage.setItem(\"toDoLists\", recentLists);\r\n    }\r\n    recentLists = JSON.parse(recentLists);\r\n\r\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\r\n    let highListId = -1;\r\n    let highListItemId = -1;\r\n    for (let i = 0; i < recentLists.length; i++) {\r\n      let toDoList = recentLists[i];\r\n      if (toDoList.id > highListId) {\r\n        highListId = toDoList.id;\r\n      }\r\n      for (let j = 0; j < toDoList.items.length; j++) {\r\n        let toDoListItem = toDoList.items[j];\r\n        if (toDoListItem.id > highListItemId)\r\n        highListItemId = toDoListItem.id;\r\n      }\r\n    };\r\n\r\n    // SETUP OUR APP STATE\r\n    this.state = {\r\n      toDoLists: recentLists,\r\n      currentList: {items: []},\r\n      nextListId: highListId+1,\r\n      nextListItemId: highListItemId+1,\r\n      useVerboseFeedback: true,\r\n      showModal: false,\r\n      clickedOn: \"\",\r\n      clickedId: -1\r\n    }\r\n  }\r\n\r\n  // WILL LOAD THE SELECTED LIST\r\n  loadToDoList = (toDoList) => {\r\n    console.log(\"loading \" + toDoList);\r\n\r\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\r\n    const nextLists = this.state.toDoLists.filter(testList =>\r\n      testList.id !== toDoList.id\r\n    );\r\n    nextLists.unshift(toDoList);\r\n\r\n    this.setState({\r\n      toDoLists: nextLists,\r\n      currentList: toDoList\r\n    });\r\n  }\r\n  /*\r\n  Creates three variables:\r\n  newToDoListInList is a a list with a new toDoList inside it.\r\n  newToDoListsList concatenates the list of list to the front of the current toDoLists.\r\n  newToDoList is the first list, which is the new one, just for currentList\r\n  */\r\n  addNewList = () => {\r\n    let newToDoListInList = [this.makeNewToDoList()];\r\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\r\n    let newToDoList = newToDoListInList[0];\r\n\r\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\r\n    this.setState({\r\n      toDoLists: newToDoListsList,\r\n      currentList: newToDoList,\r\n      nextListId: this.state.nextListId+1\r\n    }, this.afterToDoListsChangeComplete);\r\n  }\r\n\r\n  makeNewToDoList = () => {\r\n    let newToDoList = {\r\n      id: this.highListId,\r\n      name: 'Untitled',\r\n      items: []\r\n    };\r\n    return newToDoList;\r\n  }\r\n\r\n  makeNewToDoListItem = () =>  {\r\n    let newToDoListItem = {\r\n      description: \"No Description\",\r\n      dueDate: \"none\",\r\n      status: \"incomplete\"\r\n    };\r\n    return newToDoListItem;\r\n  }\r\n  deleteCurrentList = () => {\r\n    console.log(\"called\");\r\n    this.state.toDoLists.splice(0, 1);\r\n    this.setState({\r\n      toDoLists: this.state.toDoLists,\r\n      currentList: {items: []},\r\n      showModal: !this.state.showModal\r\n    })\r\n\r\n  }\r\n  swapToInput = (id, clickName) => {\r\n    console.log(\"poopy\");\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  swapToDiv = (id) => {\r\n    console.log(\"poopy\");\r\n    this.setState({\r\n      clickedOnDescription: false,\r\n      clickedId: id\r\n    })\r\n  }\r\n  handleDescriptionChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.description = value : item.description = item.description)\r\n    ))\r\n  }\r\n\r\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\r\n  afterToDoListsChangeComplete = () => {\r\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\r\n\r\n    // WILL THIS WORK? @todo\r\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\r\n    localStorage.setItem(\"recent_work\", toDoListsString);\r\n  }\r\n  toggleDeleteListConfirmation = () => {\r\n    console.log(this.state.currentList);\r\n    if (this.state.currentList.items.length != 0) {\r\n      this.setState({\r\n        showModal: !this.state.showModal\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let items = this.state.currentList.items;\r\n    return (\r\n      <div id=\"root\">\r\n        <DeleteListConfirmation\r\n          showModal={this.state.showModal}\r\n          closeModal={this.state.showModal}\r\n          deleteCurrentList={this.deleteCurrentList}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n        />\r\n        <Navbar />\r\n        <LeftSidebar \r\n          toDoLists={this.state.toDoLists}\r\n          loadToDoListCallback={this.loadToDoList}\r\n          addNewListCallback={this.addNewList}\r\n        />\r\n        <Workspace \r\n          toDoListItems={items}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n          currentListActive={this.state.currentList.items.length > 0}\r\n          swapToInput={this.swapToInput}\r\n          swapToDiv={this.swapToDiv}\r\n          clickedOnDescription={this.state.clickedOnDescription}\r\n          clickedId={this.state.clickedId}\r\n          handleDescriptionChange={this.handleDescriptionChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}