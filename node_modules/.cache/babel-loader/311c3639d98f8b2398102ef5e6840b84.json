{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\cse316hw2\\\\todo_tracker_hw2\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport DeleteListConfirmation from './components/DeleteListConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\n  import ItemsListComponent from './components/ItemsListComponent'\r\n  import ListsComponent from './components/ListsComponent'\r\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList\n      });\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.highListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.makeNewToDoListItem = () => {\n      let newToDoListItem = {\n        description: \"No Description\",\n        dueDate: \"none\",\n        status: \"incomplete\"\n      };\n      return newToDoListItem;\n    };\n\n    this.deleteCurrentList = () => {\n      if (this.currentList != null) {\n        this.setState = {\n          toDoLists: recentLists,\n          currentList: {\n            items: []\n          },\n          nextListId: highListId + 1,\n          nextListItemId: highListItemId + 1,\n          useVerboseFeedback: true,\n          showModal: false\n        };\n      }\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.toggleDeleteListConfirmation = () => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let _recentLists = localStorage.getItem(\"recentLists\");\n\n    console.log(\"recentLists: \" + _recentLists);\n\n    if (!_recentLists) {\n      _recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", _recentLists);\n    }\n\n    _recentLists = JSON.parse(_recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let _highListId = -1;\n\n    let _highListItemId = -1;\n\n    for (let i = 0; i < _recentLists.length; i++) {\n      let toDoList = _recentLists[i];\n\n      if (toDoList.id > _highListId) {\n        _highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > _highListItemId) _highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: _recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: _highListId + 1,\n      nextListItemId: _highListItemId + 1,\n      useVerboseFeedback: true,\n      showModal: false\n    };\n  } // WILL LOAD THE SELECTED LIST\n\n\n  render() {\n    let items = this.state.currentList.items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(DeleteListConfirmation, {\n        showModal: this.state.showModal,\n        closeModal: this.state.showModal,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/johnn/cse316hw2/todo_tracker_hw2/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","DeleteListConfirmation","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","highListId","name","items","makeNewToDoListItem","newToDoListItem","description","dueDate","status","deleteCurrentList","recentLists","nextListItemId","highListItemId","useVerboseFeedback","showModal","toDoListsString","JSON","stringify","localStorage","setItem","toggleDeleteListConfirmation","tps","getItem","parse","i","length","j","toDoListItem","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport testData from './test/testData.json'\r\nimport jsTPS from './common/jsTPS'\r\n\r\n// THESE ARE OUR REACT COMPONENTS\r\nimport Navbar from './components/Navbar'\r\nimport LeftSidebar from './components/LeftSidebar'\r\nimport Workspace from './components/Workspace'\r\nimport DeleteListConfirmation from './components/DeleteListConfirmation'\r\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\nimport ItemsListComponent from './components/ItemsListComponent'\r\nimport ListsComponent from './components/ListsComponent'\r\n*/}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // ALWAYS DO THIS FIRST\r\n    super(props);\r\n\r\n    // DISPLAY WHERE WE ARE\r\n    console.log(\"App constructor\");\r\n\r\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\r\n    this.tps = new jsTPS();\r\n\r\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\r\n    let recentLists = localStorage.getItem(\"recentLists\");\r\n    console.log(\"recentLists: \" + recentLists);\r\n    if (!recentLists) {\r\n      recentLists = JSON.stringify(testData.toDoLists);\r\n      localStorage.setItem(\"toDoLists\", recentLists);\r\n    }\r\n    recentLists = JSON.parse(recentLists);\r\n\r\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\r\n    let highListId = -1;\r\n    let highListItemId = -1;\r\n    for (let i = 0; i < recentLists.length; i++) {\r\n      let toDoList = recentLists[i];\r\n      if (toDoList.id > highListId) {\r\n        highListId = toDoList.id;\r\n      }\r\n      for (let j = 0; j < toDoList.items.length; j++) {\r\n        let toDoListItem = toDoList.items[j];\r\n        if (toDoListItem.id > highListItemId)\r\n        highListItemId = toDoListItem.id;\r\n      }\r\n    };\r\n\r\n    // SETUP OUR APP STATE\r\n    this.state = {\r\n      toDoLists: recentLists,\r\n      currentList: {items: []},\r\n      nextListId: highListId+1,\r\n      nextListItemId: highListItemId+1,\r\n      useVerboseFeedback: true,\r\n      showModal: false\r\n    }\r\n  }\r\n\r\n  // WILL LOAD THE SELECTED LIST\r\n  loadToDoList = (toDoList) => {\r\n    console.log(\"loading \" + toDoList);\r\n\r\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\r\n    const nextLists = this.state.toDoLists.filter(testList =>\r\n      testList.id !== toDoList.id\r\n    );\r\n    nextLists.unshift(toDoList);\r\n\r\n    this.setState({\r\n      toDoLists: nextLists,\r\n      currentList: toDoList\r\n    });\r\n  }\r\n  /*\r\n  Creates three variables:\r\n  newToDoList\r\n  */\r\n  addNewList = () => {\r\n    let newToDoListInList = [this.makeNewToDoList()];\r\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\r\n    let newToDoList = newToDoListInList[0];\r\n\r\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\r\n    this.setState({\r\n      toDoLists: newToDoListsList,\r\n      currentList: newToDoList,\r\n      nextListId: this.state.nextListId+1\r\n    }, this.afterToDoListsChangeComplete);\r\n  }\r\n\r\n  makeNewToDoList = () => {\r\n    let newToDoList = {\r\n      id: this.highListId,\r\n      name: 'Untitled',\r\n      items: []\r\n    };\r\n    return newToDoList;\r\n  }\r\n\r\n  makeNewToDoListItem = () =>  {\r\n    let newToDoListItem = {\r\n      description: \"No Description\",\r\n      dueDate: \"none\",\r\n      status: \"incomplete\"\r\n    };\r\n    return newToDoListItem;\r\n  }\r\n  deleteCurrentList = () => {\r\n    if (this.currentList != null) {\r\n      this.setState = {\r\n        toDoLists: recentLists,\r\n        currentList: {items: []},\r\n        nextListId: highListId+1,\r\n        nextListItemId: highListItemId+1,\r\n        useVerboseFeedback: true,\r\n        showModal: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\r\n  afterToDoListsChangeComplete = () => {\r\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\r\n\r\n    // WILL THIS WORK? @todo\r\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\r\n    localStorage.setItem(\"recent_work\", toDoListsString);\r\n  }\r\n  toggleDeleteListConfirmation = () => {\r\n    this.setState({\r\n      showModal: !this.state.showModal\r\n    })\r\n  }\r\n  render() {\r\n    let items = this.state.currentList.items;\r\n    return (\r\n      <div id=\"root\">\r\n        <DeleteListConfirmation\r\n          showModal={this.state.showModal}\r\n          closeModal={this.state.showModal}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n        />\r\n        <Navbar />\r\n        <LeftSidebar \r\n          toDoLists={this.state.toDoLists}\r\n          loadToDoListCallback={this.loadToDoList}\r\n          addNewListCallback={this.addNewList}\r\n        />\r\n        <Workspace \r\n          toDoListItems={items}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}