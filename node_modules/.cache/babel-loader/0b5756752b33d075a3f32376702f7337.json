{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\cse316hw2\\\\todo_tracker_hw2\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport DeleteListConfirmation from './components/DeleteListConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\n  import ItemsListComponent from './components/ItemsListComponent'\r\n  import ListsComponent from './components/ListsComponent'\r\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList\n      });\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.nextListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.addNewItemToList = () => {\n      console.log(\"ran??\");\n      let newItem = this.makeNewToDoListItem();\n      this.state.currentList.items.push(newItem);\n      this.setState({\n        currentList: this.state.currentList,\n        nextListItemId: this.state.nextListItemId + 1\n      });\n    };\n\n    this.deleteCurrentList = () => {\n      console.log(\"called\");\n      this.state.toDoLists.splice(0, 1);\n      this.setState({\n        toDoLists: this.state.toDoLists,\n        currentList: {\n          items: []\n        },\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.moveItemUp = id => {\n      for (let i = 1; i < this.state.currentList.items.length; i++) {\n        if (id == this.state.currentList.items[i].id) {\n          let temp = this.state.currentList.items[i];\n          this.state.currentList.items[i] = this.state.currentList.items[i - 1];\n          this.state.currentList.items[i - 1] = temp;\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.moveItemUp = id => {\n      for (let i = this.state.currentList.items.length - 2; i >= 0; i++) {\n        if (id == this.state.currentList.items[i].id) {\n          let temp = this.state.currentList.items[i];\n          this.state.currentList.items[i] = this.state.currentList.items[i - 1];\n          this.state.currentList.items[i - 1] = temp;\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.swapToInput = (id, clickName) => {\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.swapToDiv = (id, clickName) => {\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.swapToStatus = (id, clickName) => {\n      console.log(\"status\");\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.handleDescriptionChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.description = value : item.description = item.description);\n    };\n\n    this.handleDueDateChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.due_date = value : item.due_date = item.due_date);\n    };\n\n    this.handleStatusChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.status = value : item.status = item.status);\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.toggleDeleteListConfirmation = () => {\n      console.log(this.state.currentList);\n\n      if (this.state.currentList.items.length != 0) {\n        this.setState({\n          showModal: !this.state.showModal\n        });\n      }\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      useVerboseFeedback: true,\n      showModal: false,\n      clickedOn: \"\",\n      clickedId: -1\n    };\n  } // WILL LOAD THE SELECTED LIST\n\n\n  makeNewToDoListItem() {\n    console.log(\"ran?\");\n    console.log(this.highListItemId);\n    let newToDoListItem = {\n      description: \"No Description\",\n      dueDate: \"none\",\n      status: \"incomplete\",\n      id: this.state.nextListItemId\n    };\n    console.log(newToDoListItem);\n    return newToDoListItem;\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(DeleteListConfirmation, {\n        showModal: this.state.showModal,\n        closeModal: this.state.showModal,\n        deleteCurrentList: this.deleteCurrentList,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList,\n        currentList: this.state.currentList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation,\n        currentListActive: this.state.currentList.items.length > 0,\n        swapToInput: this.swapToInput,\n        swapToDiv: this.swapToDiv,\n        swapToStatus: this.swapToStatus,\n        clickedOn: this.state.clickedOn,\n        clickedId: this.state.clickedId,\n        handleDescriptionChange: this.handleDescriptionChange,\n        handleDueDateChange: this.handleDueDateChange,\n        handleStatusChange: this.handleStatusChange,\n        addNewItemToList: this.addNewItemToList,\n        moveItemUp: this.moveItemUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/johnn/cse316hw2/todo_tracker_hw2/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","DeleteListConfirmation","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","name","items","addNewItemToList","newItem","makeNewToDoListItem","push","nextListItemId","deleteCurrentList","splice","showModal","moveItemUp","i","length","temp","swapToInput","clickName","clickedOn","clickedId","swapToDiv","swapToStatus","handleDescriptionChange","value","map","item","description","handleDueDateChange","due_date","handleStatusChange","status","toDoListsString","JSON","stringify","localStorage","setItem","toggleDeleteListConfirmation","tps","recentLists","getItem","parse","highListId","highListItemId","j","toDoListItem","useVerboseFeedback","newToDoListItem","dueDate","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport testData from './test/testData.json'\r\nimport jsTPS from './common/jsTPS'\r\n\r\n// THESE ARE OUR REACT COMPONENTS\r\nimport Navbar from './components/Navbar'\r\nimport LeftSidebar from './components/LeftSidebar'\r\nimport Workspace from './components/Workspace'\r\nimport DeleteListConfirmation from './components/DeleteListConfirmation'\r\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\nimport ItemsListComponent from './components/ItemsListComponent'\r\nimport ListsComponent from './components/ListsComponent'\r\n*/}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // ALWAYS DO THIS FIRST\r\n    super(props);\r\n\r\n    // DISPLAY WHERE WE ARE\r\n    console.log(\"App constructor\");\r\n\r\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\r\n    this.tps = new jsTPS();\r\n\r\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\r\n    let recentLists = localStorage.getItem(\"recentLists\");\r\n    console.log(\"recentLists: \" + recentLists);\r\n    if (!recentLists) {\r\n      recentLists = JSON.stringify(testData.toDoLists);\r\n      localStorage.setItem(\"toDoLists\", recentLists);\r\n    }\r\n    recentLists = JSON.parse(recentLists);\r\n\r\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\r\n    let highListId = -1;\r\n    let highListItemId = -1;\r\n    for (let i = 0; i < recentLists.length; i++) {\r\n      let toDoList = recentLists[i];\r\n      if (toDoList.id > highListId) {\r\n        highListId = toDoList.id;\r\n      }\r\n      for (let j = 0; j < toDoList.items.length; j++) {\r\n        let toDoListItem = toDoList.items[j];\r\n        if (toDoListItem.id > highListItemId)\r\n        highListItemId = toDoListItem.id;\r\n      }\r\n    };\r\n\r\n    // SETUP OUR APP STATE\r\n    this.state = {\r\n      toDoLists: recentLists,\r\n      currentList: {items: []},\r\n      nextListId: highListId+1,\r\n      nextListItemId: highListItemId+1,\r\n      useVerboseFeedback: true,\r\n      showModal: false,\r\n      clickedOn: \"\",\r\n      clickedId: -1\r\n    }\r\n  }\r\n\r\n  // WILL LOAD THE SELECTED LIST\r\n  loadToDoList = (toDoList) => {\r\n    console.log(\"loading \" + toDoList);\r\n\r\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\r\n    const nextLists = this.state.toDoLists.filter(testList =>\r\n      testList.id !== toDoList.id\r\n    );\r\n    nextLists.unshift(toDoList);\r\n\r\n    this.setState({\r\n      toDoLists: nextLists,\r\n      currentList: toDoList\r\n    });\r\n  }\r\n  /*\r\n  Creates three variables:\r\n  newToDoListInList is a a list with a new toDoList inside it.\r\n  newToDoListsList concatenates the list of list to the front of the current toDoLists.\r\n  newToDoList is the first list, which is the new one, just for currentList\r\n  */\r\n  addNewList = () => {\r\n    let newToDoListInList = [this.makeNewToDoList()];\r\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\r\n    let newToDoList = newToDoListInList[0];\r\n\r\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\r\n    this.setState({\r\n      toDoLists: newToDoListsList,\r\n      currentList: newToDoList,\r\n      nextListId: this.state.nextListId+1\r\n    }, this.afterToDoListsChangeComplete);\r\n  }\r\n\r\n  makeNewToDoList = () => {\r\n    let newToDoList = {\r\n      id: this.nextListId,\r\n      name: 'Untitled',\r\n      items: []\r\n    };\r\n    return newToDoList;\r\n  }\r\n\r\n  makeNewToDoListItem() {\r\n    console.log(\"ran?\");\r\n    console.log(this.highListItemId)\r\n    let newToDoListItem = {\r\n      description: \"No Description\",\r\n      dueDate: \"none\",\r\n      status: \"incomplete\",\r\n      id: this.state.nextListItemId\r\n    };\r\n    console.log(newToDoListItem);\r\n    return newToDoListItem;\r\n  }\r\n  addNewItemToList = () => {\r\n    console.log(\"ran??\");\r\n    let newItem = this.makeNewToDoListItem();\r\n    this.state.currentList.items.push(newItem);\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      nextListItemId: this.state.nextListItemId+1\r\n    })\r\n    \r\n  }\r\n  deleteCurrentList = () => {\r\n    console.log(\"called\");\r\n    this.state.toDoLists.splice(0, 1);\r\n    this.setState({\r\n      toDoLists: this.state.toDoLists,\r\n      currentList: {items: []},\r\n      showModal: !this.state.showModal\r\n    })\r\n  }\r\n  moveItemUp = (id) => {\r\n    for (let i = 1; i < this.state.currentList.items.length; i++) {\r\n      if (id == this.state.currentList.items[i].id) {\r\n        let temp = this.state.currentList.items[i]\r\n        this.state.currentList.items[i] = this.state.currentList.items[i-1];\r\n        this.state.currentList.items[i-1] = temp;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  moveItemUp = (id) => {\r\n    for (let i = this.state.currentList.items.length-2; i >= 0; i++) {\r\n      if (id == this.state.currentList.items[i].id) {\r\n        let temp = this.state.currentList.items[i]\r\n        this.state.currentList.items[i] = this.state.currentList.items[i-1];\r\n        this.state.currentList.items[i-1] = temp;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  swapToInput = (id, clickName) => {\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  swapToDiv = (id, clickName) => {\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  swapToStatus = (id, clickName) => {\r\n    console.log(\"status\");\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  handleDescriptionChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.description = value : item.description = item.description)\r\n    ))\r\n  }\r\n  handleDueDateChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.due_date = value : item.due_date = item.due_date)\r\n    ))\r\n  }\r\n  handleStatusChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.status = value : item.status = item.status)\r\n    ))\r\n  }\r\n\r\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\r\n  afterToDoListsChangeComplete = () => {\r\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\r\n\r\n    // WILL THIS WORK? @todo\r\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\r\n    localStorage.setItem(\"recent_work\", toDoListsString);\r\n  }\r\n  toggleDeleteListConfirmation = () => {\r\n    console.log(this.state.currentList);\r\n    if (this.state.currentList.items.length != 0) {\r\n      this.setState({\r\n        showModal: !this.state.showModal\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let items = this.state.currentList.items;\r\n    return (\r\n      <div id=\"root\">\r\n        <DeleteListConfirmation\r\n          showModal={this.state.showModal}\r\n          closeModal={this.state.showModal}\r\n          deleteCurrentList={this.deleteCurrentList}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n        />\r\n        <Navbar />\r\n        <LeftSidebar \r\n          toDoLists={this.state.toDoLists}\r\n          loadToDoListCallback={this.loadToDoList}\r\n          addNewListCallback={this.addNewList}\r\n          currentList={this.state.currentList}\r\n        />\r\n        <Workspace \r\n          toDoListItems={items}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n          currentListActive={this.state.currentList.items.length > 0}\r\n          swapToInput={this.swapToInput}\r\n          swapToDiv={this.swapToDiv}\r\n          swapToStatus={this.swapToStatus}\r\n          clickedOn={this.state.clickedOn}\r\n          clickedId={this.state.clickedId}\r\n          handleDescriptionChange={this.handleDescriptionChange}\r\n          handleDueDateChange={this.handleDueDateChange}\r\n          handleStatusChange={this.handleStatusChange}\r\n          addNewItemToList={this.addNewItemToList}\r\n          moveItemUp={this.moveItemUp}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}