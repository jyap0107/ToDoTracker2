{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\cse316hw2\\\\todo_tracker_hw2\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport DeleteListConfirmation from './components/DeleteListConfirmation';\nimport AddNewItem_Transaction from './transactions/AddNewItem_Transaction';\nimport DeleteItem_Transaction from './transactions/DeleteItem_Transaction';\nimport DescriptionChange_Transaction from './transactions/DescriptionChange_Transaction';\nimport DueDateChange_Transaction from './transactions/DueDateChange_Transaction';\nimport StatusChange_Transaction from './transactions/StatusChange_Transaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\n  import ItemsListComponent from './components/ItemsListComponent'\r\n  import ListsComponent from './components/ListsComponent'\r\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList,\n        clickedOn: \"otherList\"\n      });\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.state.nextListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.addNewItemToList = () => {\n      let newItem = this.makeNewToDoListItem();\n      this.state.currentList.items.push(newItem);\n      let id = this.state.nextListItemId;\n      this.setState({\n        currentList: this.state.currentList,\n        nextListItemId: this.state.nextListItemId + 1\n      });\n      return id;\n    };\n\n    this.addItemAtIndex = (item, index) => {\n      this.state.currentList.items.splice(index, 0, item);\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.addCustomItemToList = (desc, due, stat, givenId) => {\n      let newItem = {\n        description: desc,\n        dueDate: due,\n        status: stat,\n        id: givenId\n      };\n      this.state.currentList.items.push(newItem);\n      let id = this.state.nextListItemId;\n      this.setState({\n        currentList: this.state.currentList,\n        nextListItemId: this.state.nextListItemId + 1\n      });\n      return id;\n    };\n\n    this.deleteCurrentList = () => {\n      this.state.toDoLists.splice(0, 1);\n      this.setState({\n        toDoLists: this.state.toDoLists,\n        currentList: {\n          items: []\n        },\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.moveItemUp = id => {\n      let pos = -1;\n\n      for (let i = 1; i < this.state.currentList.items.length; i++) {\n        if (id == this.state.currentList.items[i].id) {\n          let temp = this.state.currentList.items[i];\n          this.state.currentList.items[i] = this.state.currentList.items[i - 1];\n          this.state.currentList.items[i - 1] = temp;\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.moveItemDown = id => {\n      for (let i = this.state.currentList.items.length - 2; i >= 0; i--) {\n        if (id == this.state.currentList.items[i].id) {\n          let temp = this.state.currentList.items[i];\n          this.state.currentList.items[i] = this.state.currentList.items[i + 1];\n          this.state.currentList.items[i + 1] = temp;\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.deleteItem = id => {\n      let item;\n      let position = 0;\n\n      for (let i = 0; i < this.state.currentList.items.length; i++) {\n        if (this.state.currentList.items[i].id == id) {\n          item = this.state.currentList.items[i];\n          position = i;\n          this.state.currentList.items.splice(i, 1);\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n      return [item, position];\n    };\n\n    this.swapToInput = (id, clickName) => {\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.swapToDiv = (id, value, clickName) => {\n      if (clickName == \"description\") {\n        this.descriptionChangeTransaction(value, id);\n      }\n\n      if (clickName == \"dueDate\") {\n        this.dueDateChangeTransaction(value, id);\n      }\n\n      if (clickName == \"status\") {\n        this.statusChangeTransaction(value, id);\n      }\n    };\n\n    this.swapToStatus = (id, clickName) => {\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.handleDescriptionChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.description = value : item.description = item.description);\n      this.setState({\n        currentList: this.state.currentList,\n        clickedOn: \"\",\n        clickedId: \"\"\n      });\n    };\n\n    this.handleDueDateChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.due_date = value : item.due_date = item.due_date);\n      this.setState({\n        currentList: this.state.currentList,\n        clickedOn: \"\",\n        clickedId: \"\"\n      });\n    };\n\n    this.handleStatusChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.status = value : item.status = item.status);\n      this.setState({\n        currentList: this.state.currentList,\n        clickedOn: \"\",\n        clickedId: \"\"\n      });\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.toggleDeleteListConfirmation = () => {\n      if (this.state.currentList.items.length != 0) {\n        this.setState({\n          showModal: !this.state.showModal\n        });\n      }\n    };\n\n    this.closeList = () => {\n      this.setState({\n        currentList: {\n          items: []\n        }\n      });\n    };\n\n    this.handleListNameChange = (value, id) => {\n      this.state.toDoLists.map(list => list.id == id ? list.name = value : list.name = list.name);\n      this.setState({\n        toDoLists: this.state.toDoLists\n      });\n    };\n\n    this.getItemAttribute = (id, attribute) => {\n      let items = this.state.currentList.items;\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].id == id) {\n          if (attribute == \"description\") {\n            return items[i].description;\n          }\n\n          if (attribute == \"dueDate\") {\n            return items[i].due_date;\n          }\n\n          if (attribute == \"status\") {\n            return items[i].status;\n          }\n\n          break;\n        }\n      }\n\n      return;\n    };\n\n    this.undo = () => {\n      this.tps.undoTransaction();\n    };\n\n    this.redo = () => {\n      this.tps.doTransaction();\n    };\n\n    this.addNewItemTransaction = () => {\n      let transaction = new AddNewItem_Transaction(this);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.deleteItemTransaction = id => {\n      let transaction = new DeleteItem_Transaction(this, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.descriptionChangeTransaction = (value, id) => {\n      let transaction = new DescriptionChange_Transaction(this, value, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.dueDateChangeTransaction = (value, id) => {\n      let transaction = new DueDateChange_Transaction(this, value, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.statusChangeTransaction = (value, id) => {\n      let transaction = new StatusChange_Transaction(this, value, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      useVerboseFeedback: true,\n      showModal: false,\n      clickedOn: \"\",\n      clickedId: -1\n    };\n  } // componentDidUpdate(prevProps, prevState) {\n  //   console.log(prevState.currentList.items[0]);\n  // }\n  // WILL LOAD THE SELECTED LIST\n\n\n  makeNewToDoListItem() {\n    let newToDoListItem = {\n      description: \"No Description\",\n      dueDate: \"none\",\n      status: \"incomplete\",\n      id: this.state.nextListItemId\n    };\n    return newToDoListItem;\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(DeleteListConfirmation, {\n        showModal: this.state.showModal,\n        closeModal: this.state.showModal,\n        deleteCurrentList: this.deleteCurrentList,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList,\n        currentList: this.state.currentList,\n        swapToInput: this.swapToInput,\n        clickedOn: this.state.clickedOn,\n        clickedId: this.state.clickedId,\n        handleListNameChange: this.handleListNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation,\n        currentListActive: this.state.currentList.items.length > 0,\n        swapToInput: this.swapToInput,\n        swapToDiv: this.swapToDiv,\n        swapToStatus: this.swapToStatus,\n        clickedOn: this.state.clickedOn,\n        clickedId: this.state.clickedId,\n        handleDescriptionChange: this.handleDescriptionChange,\n        handleDueDateChange: this.handleDueDateChange,\n        handleStatusChange: this.handleStatusChange,\n        addNewItemToList: this.addNewItemTransaction,\n        moveItemUp: this.moveItemUp,\n        moveItemDown: this.moveItemDown,\n        deleteItem: this.deleteItemTransaction,\n        closeList: this.closeList,\n        undo: this.undo,\n        redo: this.redo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/johnn/cse316hw2/todo_tracker_hw2/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","DeleteListConfirmation","AddNewItem_Transaction","DeleteItem_Transaction","DescriptionChange_Transaction","DueDateChange_Transaction","StatusChange_Transaction","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","clickedOn","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","name","items","addNewItemToList","newItem","makeNewToDoListItem","push","nextListItemId","addItemAtIndex","item","index","splice","addCustomItemToList","desc","due","stat","givenId","description","dueDate","status","deleteCurrentList","showModal","moveItemUp","pos","i","length","temp","moveItemDown","deleteItem","position","swapToInput","clickName","clickedId","swapToDiv","value","descriptionChangeTransaction","dueDateChangeTransaction","statusChangeTransaction","swapToStatus","handleDescriptionChange","map","handleDueDateChange","due_date","handleStatusChange","toDoListsString","JSON","stringify","localStorage","setItem","toggleDeleteListConfirmation","closeList","handleListNameChange","list","getItemAttribute","attribute","undo","tps","undoTransaction","redo","doTransaction","addNewItemTransaction","transaction","addTransaction","deleteItemTransaction","recentLists","getItem","parse","highListId","highListItemId","j","toDoListItem","useVerboseFeedback","newToDoListItem","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport testData from './test/testData.json'\r\nimport jsTPS from './common/jsTPS'\r\n\r\n// THESE ARE OUR REACT COMPONENTS\r\nimport Navbar from './components/Navbar'\r\nimport LeftSidebar from './components/LeftSidebar'\r\nimport Workspace from './components/Workspace'\r\nimport DeleteListConfirmation from './components/DeleteListConfirmation'\r\nimport AddNewItem_Transaction from './transactions/AddNewItem_Transaction'\r\nimport DeleteItem_Transaction from './transactions/DeleteItem_Transaction'\r\nimport DescriptionChange_Transaction from './transactions/DescriptionChange_Transaction'\r\nimport DueDateChange_Transaction from './transactions/DueDateChange_Transaction'\r\nimport StatusChange_Transaction from './transactions/StatusChange_Transaction'\r\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\nimport ItemsListComponent from './components/ItemsListComponent'\r\nimport ListsComponent from './components/ListsComponent'\r\n*/}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // ALWAYS DO THIS FIRST\r\n    super(props);\r\n\r\n    // DISPLAY WHERE WE ARE\r\n    console.log(\"App constructor\");\r\n\r\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\r\n    this.tps = new jsTPS();\r\n\r\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\r\n    let recentLists = localStorage.getItem(\"recentLists\");\r\n    console.log(\"recentLists: \" + recentLists);\r\n    if (!recentLists) {\r\n      recentLists = JSON.stringify(testData.toDoLists);\r\n      localStorage.setItem(\"toDoLists\", recentLists);\r\n    }\r\n    recentLists = JSON.parse(recentLists);\r\n\r\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\r\n    let highListId = -1;\r\n    let highListItemId = -1;\r\n    for (let i = 0; i < recentLists.length; i++) {\r\n      let toDoList = recentLists[i];\r\n      if (toDoList.id > highListId) {\r\n        highListId = toDoList.id;\r\n      }\r\n      for (let j = 0; j < toDoList.items.length; j++) {\r\n        let toDoListItem = toDoList.items[j];\r\n        if (toDoListItem.id > highListItemId)\r\n        highListItemId = toDoListItem.id;\r\n      }\r\n    };\r\n\r\n    // SETUP OUR APP STATE\r\n    this.state = {\r\n      toDoLists: recentLists,\r\n      currentList: {items: []},\r\n      nextListId: highListId+1,\r\n      nextListItemId: highListItemId+1,\r\n      useVerboseFeedback: true,\r\n      showModal: false,\r\n      clickedOn: \"\",\r\n      clickedId: -1\r\n    }\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   console.log(prevState.currentList.items[0]);\r\n  // }\r\n  // WILL LOAD THE SELECTED LIST\r\n  loadToDoList = (toDoList) => {\r\n    console.log(\"loading \" + toDoList);\r\n\r\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\r\n    const nextLists = this.state.toDoLists.filter(testList =>\r\n      testList.id !== toDoList.id\r\n    );\r\n    nextLists.unshift(toDoList);\r\n\r\n    this.setState({\r\n      toDoLists: nextLists,\r\n      currentList: toDoList,\r\n      clickedOn: \"otherList\"\r\n    });\r\n  }\r\n  /*\r\n  Creates three variables:\r\n  newToDoListInList is a a list with a new toDoList inside it.\r\n  newToDoListsList concatenates the list of list to the front of the current toDoLists.\r\n  newToDoList is the first list, which is the new one, just for currentList\r\n  */\r\n  addNewList = () => {\r\n    let newToDoListInList = [this.makeNewToDoList()];\r\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\r\n    let newToDoList = newToDoListInList[0];\r\n\r\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\r\n    this.setState({\r\n      toDoLists: newToDoListsList,\r\n      currentList: newToDoList,\r\n      nextListId: this.state.nextListId+1\r\n    }, this.afterToDoListsChangeComplete);\r\n  }\r\n\r\n  makeNewToDoList = () => {\r\n    let newToDoList = {\r\n      id: this.state.nextListId,\r\n      name: 'Untitled',\r\n      items: []\r\n    };\r\n    return newToDoList;\r\n  }\r\n\r\n  makeNewToDoListItem() {\r\n    let newToDoListItem = {\r\n      description: \"No Description\",\r\n      dueDate: \"none\",\r\n      status: \"incomplete\",\r\n      id: this.state.nextListItemId\r\n    };\r\n    return newToDoListItem;\r\n  }\r\n  addNewItemToList = () => {\r\n    let newItem = this.makeNewToDoListItem();\r\n    this.state.currentList.items.push(newItem);\r\n    let id = this.state.nextListItemId;\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      nextListItemId: this.state.nextListItemId+1\r\n    })\r\n    return id;\r\n  }\r\n  addItemAtIndex = (item, index) => {\r\n    this.state.currentList.items.splice(index, 0, item);\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  addCustomItemToList = (desc, due, stat, givenId) => {\r\n    let newItem = {\r\n      description: desc,\r\n      dueDate: due,\r\n      status: stat,\r\n      id: givenId\r\n    };\r\n    this.state.currentList.items.push(newItem);\r\n    let id = this.state.nextListItemId;\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      nextListItemId: this.state.nextListItemId+1\r\n    })\r\n    return id;\r\n  }\r\n  deleteCurrentList = () => {\r\n    this.state.toDoLists.splice(0, 1);\r\n    this.setState({\r\n      toDoLists: this.state.toDoLists,\r\n      currentList: {items: []},\r\n      showModal: !this.state.showModal\r\n    })\r\n  }\r\n  moveItemUp = (id) => {\r\n    let pos = -1;\r\n    for (let i = 1; i < this.state.currentList.items.length; i++) {\r\n      if (id == this.state.currentList.items[i].id) {\r\n        let temp = this.state.currentList.items[i]\r\n        this.state.currentList.items[i] = this.state.currentList.items[i-1];\r\n        this.state.currentList.items[i-1] = temp;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  moveItemDown = (id) => {\r\n    for (let i = this.state.currentList.items.length-2; i >= 0; i--) {\r\n      if (id == this.state.currentList.items[i].id) {\r\n        let temp = this.state.currentList.items[i]\r\n        this.state.currentList.items[i] = this.state.currentList.items[i+1];\r\n        this.state.currentList.items[i+1] = temp;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  deleteItem = (id) => {\r\n    let item;\r\n    let position = 0;\r\n    for (let i = 0; i < this.state.currentList.items.length; i++) {\r\n      if (this.state.currentList.items[i].id == id) {\r\n        item = this.state.currentList.items[i];\r\n        position = i;\r\n        this.state.currentList.items.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n    return [item, position];\r\n  }\r\n  swapToInput = (id, clickName) => {\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  swapToDiv = (id, value, clickName) => {\r\n    if (clickName == \"description\") {\r\n      this.descriptionChangeTransaction(value, id)\r\n    }\r\n    if (clickName == \"dueDate\") {\r\n      this.dueDateChangeTransaction(value, id);\r\n    }\r\n    if (clickName == \"status\") {\r\n      this.statusChangeTransaction(value, id);\r\n    }\r\n  }\r\n  swapToStatus = (id, clickName) => {\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  handleDescriptionChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.description = value : item.description = item.description)\r\n    ))\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      clickedOn: \"\",\r\n      clickedId: \"\"\r\n    })\r\n  }\r\n  handleDueDateChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.due_date = value : item.due_date = item.due_date)\r\n    ))\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      clickedOn: \"\",\r\n      clickedId: \"\"\r\n    })\r\n  }\r\n  handleStatusChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.status = value : item.status = item.status)\r\n    ))\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      clickedOn: \"\",\r\n      clickedId: \"\"\r\n    })\r\n  }\r\n\r\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\r\n  afterToDoListsChangeComplete = () => {\r\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\r\n\r\n    // WILL THIS WORK? @todo\r\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\r\n    localStorage.setItem(\"recent_work\", toDoListsString);\r\n  }\r\n  toggleDeleteListConfirmation = () => {\r\n    if (this.state.currentList.items.length != 0) {\r\n      this.setState({\r\n        showModal: !this.state.showModal\r\n      })\r\n    }\r\n  }\r\n  closeList = () => {\r\n    this.setState({\r\n      currentList: {items: []}\r\n    })\r\n  }\r\n  handleListNameChange = (value, id) => {\r\n      this.state.toDoLists.map((list) => (list.id == id ? list.name = value : list.name = list.name));\r\n      this.setState({\r\n        toDoLists:this.state.toDoLists\r\n      })\r\n  }\r\n  getItemAttribute = (id, attribute) => {\r\n    let items = this.state.currentList.items;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].id == id) {\r\n        if (attribute == \"description\") {\r\n          return items[i].description;\r\n        }\r\n        if (attribute == \"dueDate\") {\r\n          return items[i].due_date;\r\n        }\r\n        if (attribute == \"status\") {\r\n          return items[i].status;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return;\r\n  }\r\n  undo = () => {\r\n    this.tps.undoTransaction();\r\n  }\r\n  redo = () => {\r\n    this.tps.doTransaction();\r\n  }\r\n  addNewItemTransaction = () => {\r\n    let transaction = new AddNewItem_Transaction(this);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  deleteItemTransaction = (id) => {\r\n    let transaction = new DeleteItem_Transaction(this, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  descriptionChangeTransaction = (value, id) => {\r\n    let transaction = new DescriptionChange_Transaction(this, value, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  dueDateChangeTransaction = (value, id) => {\r\n    let transaction = new DueDateChange_Transaction(this, value, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  statusChangeTransaction = (value, id) => {\r\n    let transaction = new StatusChange_Transaction(this, value, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  render() {\r\n    let items = this.state.currentList.items;\r\n    return (\r\n      <div id=\"root\">\r\n        <DeleteListConfirmation\r\n          showModal={this.state.showModal}\r\n          closeModal={this.state.showModal}\r\n          deleteCurrentList={this.deleteCurrentList}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n        />\r\n        <Navbar />\r\n        <LeftSidebar \r\n          toDoLists={this.state.toDoLists}\r\n          loadToDoListCallback={this.loadToDoList}\r\n          addNewListCallback={this.addNewList}\r\n          currentList={this.state.currentList}\r\n          swapToInput={this.swapToInput}\r\n          clickedOn={this.state.clickedOn}\r\n          clickedId={this.state.clickedId}\r\n          handleListNameChange={this.handleListNameChange}\r\n        />\r\n        <Workspace \r\n          toDoListItems={items}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n          currentListActive={this.state.currentList.items.length > 0}\r\n          swapToInput={this.swapToInput}\r\n          swapToDiv={this.swapToDiv}\r\n          swapToStatus={this.swapToStatus}\r\n          clickedOn={this.state.clickedOn}\r\n          clickedId={this.state.clickedId}\r\n          handleDescriptionChange={this.handleDescriptionChange}\r\n          handleDueDateChange={this.handleDueDateChange}\r\n          handleStatusChange={this.handleStatusChange}\r\n          addNewItemToList={this.addNewItemTransaction}\r\n          moveItemUp={this.moveItemUp}\r\n          moveItemDown={this.moveItemDown}\r\n          deleteItem={this.deleteItemTransaction}\r\n          closeList={this.closeList}\r\n          undo={this.undo}\r\n          redo={this.redo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}