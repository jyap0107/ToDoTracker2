{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnn\\\\cse316hw2\\\\todo_tracker_hw2\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport DeleteListConfirmation from './components/DeleteListConfirmation';\nimport AddNewItem_Transaction from './transactions/AddNewItem_Transaction';\nimport DeleteItem_Transaction from './transactions/DeleteItem_Transaction';\nimport DescriptionChange_Transaction from './transactions/DescriptionChange_Transaction';\nimport DueDateChange_Transaction from './transactions/DueDateChange_Transaction';\nimport StatusChange_Transaction from './transactions/StatusChange_Transaction';\nimport MoveItemUp_Transaction from './transactions/MoveItemUp_Transaction';\nimport MoveItemDown_Transaction from './transactions/MoveItemDown_Transaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\n  import ItemsListComponent from './components/ItemsListComponent'\r\n  import ListsComponent from './components/ListsComponent'\r\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList,\n        clickedOn: \"otherList\"\n      });\n      this.tps.clearAllTransactions();\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.state.nextListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.addNewItemToList = () => {\n      let newItem = this.makeNewToDoListItem();\n      this.state.currentList.items.push(newItem);\n      let id = this.state.nextListItemId;\n      this.setState({\n        currentList: this.state.currentList,\n        nextListItemId: this.state.nextListItemId + 1\n      }, () => {\n        if (this.tps.hasTransactionToUndo) {\n          undo: true;\n\n          this.setState;\n        }\n      });\n      return id;\n    };\n\n    this.addItemAtIndex = (item, index) => {\n      this.state.currentList.items.splice(index, 0, item);\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.addCustomItemToList = (desc, due, stat, givenId) => {\n      let newItem = {\n        description: desc,\n        dueDate: due,\n        status: stat,\n        id: givenId\n      };\n      this.state.currentList.items.push(newItem);\n      let id = this.state.nextListItemId;\n      this.setState({\n        currentList: this.state.currentList,\n        nextListItemId: this.state.nextListItemId + 1\n      });\n      return id;\n    };\n\n    this.deleteCurrentList = () => {\n      this.state.toDoLists.splice(0, 1);\n      this.setState({\n        toDoLists: this.state.toDoLists,\n        currentList: {\n          items: []\n        },\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.moveItemUp = id => {\n      for (let i = 1; i < this.state.currentList.items.length; i++) {\n        if (id == this.state.currentList.items[i].id) {\n          let temp = this.state.currentList.items[i];\n          this.state.currentList.items[i] = this.state.currentList.items[i - 1];\n          this.state.currentList.items[i - 1] = temp;\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.moveItemDown = id => {\n      for (let i = this.state.currentList.items.length - 2; i >= 0; i--) {\n        if (id == this.state.currentList.items[i].id) {\n          let temp = this.state.currentList.items[i];\n          this.state.currentList.items[i] = this.state.currentList.items[i + 1];\n          this.state.currentList.items[i + 1] = temp;\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n    };\n\n    this.deleteItem = id => {\n      let item;\n      let position = 0;\n\n      for (let i = 0; i < this.state.currentList.items.length; i++) {\n        if (this.state.currentList.items[i].id == id) {\n          item = this.state.currentList.items[i];\n          position = i;\n          this.state.currentList.items.splice(i, 1);\n          break;\n        }\n      }\n\n      this.setState({\n        currentList: this.state.currentList\n      });\n      return [item, position];\n    };\n\n    this.swapToInput = (id, clickName) => {\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.swapToDiv = (id, value, clickName) => {\n      if (clickName == \"description\") {\n        this.descriptionChangeTransaction(value, id);\n      }\n\n      if (clickName == \"dueDate\") {\n        this.dueDateChangeTransaction(value, id);\n      }\n\n      if (clickName == \"status\") {\n        this.statusChangeTransaction(value, id);\n      }\n    };\n\n    this.swapToStatus = (id, clickName) => {\n      this.setState({\n        clickedOn: clickName,\n        clickedId: id\n      });\n    };\n\n    this.handleDescriptionChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.description = value : item.description = item.description);\n      this.setState({\n        currentList: this.state.currentList,\n        clickedOn: \"\",\n        clickedId: \"\"\n      });\n    };\n\n    this.handleDueDateChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.due_date = value : item.due_date = item.due_date);\n      this.setState({\n        currentList: this.state.currentList,\n        clickedOn: \"\",\n        clickedId: \"\"\n      });\n    };\n\n    this.handleStatusChange = (value, id) => {\n      this.state.currentList.items.map(item => item.id == id ? item.status = value : item.status = item.status);\n      this.setState({\n        currentList: this.state.currentList,\n        clickedOn: \"\",\n        clickedId: \"\"\n      });\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.toggleDeleteListConfirmation = () => {\n      if (this.state.currentList.items.length != 0) {\n        this.setState({\n          showModal: !this.state.showModal\n        });\n      }\n    };\n\n    this.closeList = () => {\n      this.setState({\n        currentList: {\n          items: []\n        }\n      });\n    };\n\n    this.handleListNameChange = (value, id) => {\n      this.state.toDoLists.map(list => list.id == id ? list.name = value : list.name = list.name);\n      this.setState({\n        toDoLists: this.state.toDoLists\n      });\n    };\n\n    this.getItemAttribute = (id, attribute) => {\n      let items = this.state.currentList.items;\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].id == id) {\n          if (attribute == \"description\") {\n            return items[i].description;\n          }\n\n          if (attribute == \"dueDate\") {\n            return items[i].due_date;\n          }\n\n          if (attribute == \"status\") {\n            return items[i].status;\n          }\n\n          break;\n        }\n      }\n\n      return;\n    };\n\n    this.undo = () => {\n      console.log(\"undooooo\");\n      this.tps.undoTransaction();\n    };\n\n    this.redo = () => {\n      this.tps.doTransaction();\n    };\n\n    this.addNewItemTransaction = () => {\n      let transaction = new AddNewItem_Transaction(this);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.deleteItemTransaction = id => {\n      let transaction = new DeleteItem_Transaction(this, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.descriptionChangeTransaction = (value, id) => {\n      let transaction = new DescriptionChange_Transaction(this, value, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.dueDateChangeTransaction = (value, id) => {\n      let transaction = new DueDateChange_Transaction(this, value, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.statusChangeTransaction = (value, id) => {\n      let transaction = new StatusChange_Transaction(this, value, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.moveItemUpTransaction = id => {\n      let transaction = new MoveItemUp_Transaction(this, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    this.moveItemDownTransaction = id => {\n      let transaction = new MoveItemDown_Transaction(this, id);\n      this.tps.addTransaction(transaction);\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      useVerboseFeedback: true,\n      showModal: false,\n      clickedOn: \"\",\n      clickedId: -1,\n      hasUndo: false\n    };\n  } // componentDidUpdate(prevProps, prevState) {\n  //   console.log(prevState.currentList.items[0]);\n  // }\n  // WILL LOAD THE SELECTED LIST\n\n\n  makeNewToDoListItem() {\n    let newToDoListItem = {\n      description: \"No Description\",\n      dueDate: \"none\",\n      status: \"incomplete\",\n      id: this.state.nextListItemId\n    };\n    return newToDoListItem;\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(DeleteListConfirmation, {\n        showModal: this.state.showModal,\n        closeModal: this.state.showModal,\n        deleteCurrentList: this.deleteCurrentList,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList,\n        currentList: this.state.currentList,\n        swapToInput: this.swapToInput,\n        clickedOn: this.state.clickedOn,\n        clickedId: this.state.clickedId,\n        handleListNameChange: this.handleListNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        toggleDeleteListConfirmation: this.toggleDeleteListConfirmation,\n        currentListActive: this.state.currentList.items.length > 0,\n        swapToInput: this.swapToInput,\n        swapToDiv: this.swapToDiv,\n        swapToStatus: this.swapToStatus,\n        clickedOn: this.state.clickedOn,\n        clickedId: this.state.clickedId,\n        addNewItemToList: this.addNewItemTransaction,\n        moveItemUp: this.moveItemUpTransaction,\n        moveItemDown: this.moveItemDownTransaction,\n        deleteItem: this.deleteItemTransaction,\n        closeList: this.closeList,\n        undo: this.undo,\n        redo: this.redo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/johnn/cse316hw2/todo_tracker_hw2/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","DeleteListConfirmation","AddNewItem_Transaction","DeleteItem_Transaction","DescriptionChange_Transaction","DueDateChange_Transaction","StatusChange_Transaction","MoveItemUp_Transaction","MoveItemDown_Transaction","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","clickedOn","tps","clearAllTransactions","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","name","items","addNewItemToList","newItem","makeNewToDoListItem","push","nextListItemId","hasTransactionToUndo","undo","addItemAtIndex","item","index","splice","addCustomItemToList","desc","due","stat","givenId","description","dueDate","status","deleteCurrentList","showModal","moveItemUp","i","length","temp","moveItemDown","deleteItem","position","swapToInput","clickName","clickedId","swapToDiv","value","descriptionChangeTransaction","dueDateChangeTransaction","statusChangeTransaction","swapToStatus","handleDescriptionChange","map","handleDueDateChange","due_date","handleStatusChange","toDoListsString","JSON","stringify","localStorage","setItem","toggleDeleteListConfirmation","closeList","handleListNameChange","list","getItemAttribute","attribute","undoTransaction","redo","doTransaction","addNewItemTransaction","transaction","addTransaction","deleteItemTransaction","moveItemUpTransaction","moveItemDownTransaction","recentLists","getItem","parse","highListId","highListItemId","j","toDoListItem","useVerboseFeedback","hasUndo","newToDoListItem","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport testData from './test/testData.json'\r\nimport jsTPS from './common/jsTPS'\r\n\r\n// THESE ARE OUR REACT COMPONENTS\r\nimport Navbar from './components/Navbar'\r\nimport LeftSidebar from './components/LeftSidebar'\r\nimport Workspace from './components/Workspace'\r\nimport DeleteListConfirmation from './components/DeleteListConfirmation'\r\nimport AddNewItem_Transaction from './transactions/AddNewItem_Transaction'\r\nimport DeleteItem_Transaction from './transactions/DeleteItem_Transaction'\r\nimport DescriptionChange_Transaction from './transactions/DescriptionChange_Transaction'\r\nimport DueDateChange_Transaction from './transactions/DueDateChange_Transaction'\r\nimport StatusChange_Transaction from './transactions/StatusChange_Transaction'\r\nimport MoveItemUp_Transaction from './transactions/MoveItemUp_Transaction';\r\nimport MoveItemDown_Transaction from './transactions/MoveItemDown_Transaction'\r\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\nimport ItemsListComponent from './components/ItemsListComponent'\r\nimport ListsComponent from './components/ListsComponent'\r\n*/}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // ALWAYS DO THIS FIRST\r\n    super(props);\r\n\r\n    // DISPLAY WHERE WE ARE\r\n    console.log(\"App constructor\");\r\n\r\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\r\n    this.tps = new jsTPS();\r\n\r\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\r\n    let recentLists = localStorage.getItem(\"recentLists\");\r\n    console.log(\"recentLists: \" + recentLists);\r\n    if (!recentLists) {\r\n      recentLists = JSON.stringify(testData.toDoLists);\r\n      localStorage.setItem(\"toDoLists\", recentLists);\r\n    }\r\n    recentLists = JSON.parse(recentLists);\r\n\r\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\r\n    let highListId = -1;\r\n    let highListItemId = -1;\r\n    for (let i = 0; i < recentLists.length; i++) {\r\n      let toDoList = recentLists[i];\r\n      if (toDoList.id > highListId) {\r\n        highListId = toDoList.id;\r\n      }\r\n      for (let j = 0; j < toDoList.items.length; j++) {\r\n        let toDoListItem = toDoList.items[j];\r\n        if (toDoListItem.id > highListItemId)\r\n        highListItemId = toDoListItem.id;\r\n      }\r\n    };\r\n\r\n    // SETUP OUR APP STATE\r\n    this.state = {\r\n      toDoLists: recentLists,\r\n      currentList: {items: []},\r\n      nextListId: highListId+1,\r\n      nextListItemId: highListItemId+1,\r\n      useVerboseFeedback: true,\r\n      showModal: false,\r\n      clickedOn: \"\",\r\n      clickedId: -1,\r\n      hasUndo: false\r\n    }\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   console.log(prevState.currentList.items[0]);\r\n  // }\r\n  // WILL LOAD THE SELECTED LIST\r\n  loadToDoList = (toDoList) => {\r\n    console.log(\"loading \" + toDoList);\r\n\r\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\r\n    const nextLists = this.state.toDoLists.filter(testList =>\r\n      testList.id !== toDoList.id\r\n    );\r\n    nextLists.unshift(toDoList);\r\n\r\n    this.setState({\r\n      toDoLists: nextLists,\r\n      currentList: toDoList,\r\n      clickedOn: \"otherList\"\r\n    });\r\n    this.tps.clearAllTransactions();\r\n  }\r\n  /*\r\n  Creates three variables:\r\n  newToDoListInList is a a list with a new toDoList inside it.\r\n  newToDoListsList concatenates the list of list to the front of the current toDoLists.\r\n  newToDoList is the first list, which is the new one, just for currentList\r\n  */\r\n  addNewList = () => {\r\n    let newToDoListInList = [this.makeNewToDoList()];\r\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\r\n    let newToDoList = newToDoListInList[0];\r\n\r\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\r\n    this.setState({\r\n      toDoLists: newToDoListsList,\r\n      currentList: newToDoList,\r\n      nextListId: this.state.nextListId+1\r\n    }, this.afterToDoListsChangeComplete);\r\n  }\r\n\r\n  makeNewToDoList = () => {\r\n    let newToDoList = {\r\n      id: this.state.nextListId,\r\n      name: 'Untitled',\r\n      items: []\r\n    };\r\n    return newToDoList;\r\n  }\r\n\r\n  makeNewToDoListItem() {\r\n    let newToDoListItem = {\r\n      description: \"No Description\",\r\n      dueDate: \"none\",\r\n      status: \"incomplete\",\r\n      id: this.state.nextListItemId\r\n    };\r\n    return newToDoListItem;\r\n  }\r\n  addNewItemToList = () => {\r\n    let newItem = this.makeNewToDoListItem();\r\n    this.state.currentList.items.push(newItem);\r\n    let id = this.state.nextListItemId;\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      nextListItemId: this.state.nextListItemId+1},\r\n      () => {\r\n        if (this.tps.hasTransactionToUndo) {\r\n          undo: true;this.setState\r\n      }\r\n    })\r\n    return id;\r\n  }\r\n  addItemAtIndex = (item, index) => {\r\n    this.state.currentList.items.splice(index, 0, item);\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  addCustomItemToList = (desc, due, stat, givenId) => {\r\n    let newItem = {\r\n      description: desc,\r\n      dueDate: due,\r\n      status: stat,\r\n      id: givenId\r\n    };\r\n    this.state.currentList.items.push(newItem);\r\n    let id = this.state.nextListItemId;\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      nextListItemId: this.state.nextListItemId+1\r\n    })\r\n    return id;\r\n  }\r\n  deleteCurrentList = () => {\r\n    this.state.toDoLists.splice(0, 1);\r\n    this.setState({\r\n      toDoLists: this.state.toDoLists,\r\n      currentList: {items: []},\r\n      showModal: !this.state.showModal\r\n    })\r\n  }\r\n  moveItemUp = (id) => {\r\n    for (let i = 1; i < this.state.currentList.items.length; i++) {\r\n      if (id == this.state.currentList.items[i].id) {\r\n        let temp = this.state.currentList.items[i]\r\n        this.state.currentList.items[i] = this.state.currentList.items[i-1];\r\n        this.state.currentList.items[i-1] = temp;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  moveItemDown = (id) => {\r\n    for (let i = this.state.currentList.items.length-2; i >= 0; i--) {\r\n      if (id == this.state.currentList.items[i].id) {\r\n        let temp = this.state.currentList.items[i]\r\n        this.state.currentList.items[i] = this.state.currentList.items[i+1];\r\n        this.state.currentList.items[i+1] = temp;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n  }\r\n  deleteItem = (id) => {\r\n    let item;\r\n    let position = 0;\r\n    for (let i = 0; i < this.state.currentList.items.length; i++) {\r\n      if (this.state.currentList.items[i].id == id) {\r\n        item = this.state.currentList.items[i];\r\n        position = i;\r\n        this.state.currentList.items.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      currentList: this.state.currentList\r\n    })\r\n    return [item, position];\r\n  }\r\n  swapToInput = (id, clickName) => {\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  swapToDiv = (id, value, clickName) => {\r\n    if (clickName == \"description\") {\r\n      this.descriptionChangeTransaction(value, id)\r\n    }\r\n    if (clickName == \"dueDate\") {\r\n      this.dueDateChangeTransaction(value, id);\r\n    }\r\n    if (clickName == \"status\") {\r\n      this.statusChangeTransaction(value, id);\r\n    }\r\n  }\r\n  swapToStatus = (id, clickName) => {\r\n    this.setState({\r\n      clickedOn: clickName,\r\n      clickedId: id\r\n    })\r\n  }\r\n  handleDescriptionChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.description = value : item.description = item.description)\r\n    ))\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      clickedOn: \"\",\r\n      clickedId: \"\"\r\n    })\r\n  }\r\n  handleDueDateChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.due_date = value : item.due_date = item.due_date)\r\n    ))\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      clickedOn: \"\",\r\n      clickedId: \"\"\r\n    })\r\n  }\r\n  handleStatusChange = (value, id) => {\r\n    this.state.currentList.items.map((item) => ((item.id == id ? item.status = value : item.status = item.status)\r\n    ))\r\n    this.setState({\r\n      currentList: this.state.currentList,\r\n      clickedOn: \"\",\r\n      clickedId: \"\"\r\n    })\r\n  }\r\n\r\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\r\n  afterToDoListsChangeComplete = () => {\r\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\r\n\r\n    // WILL THIS WORK? @todo\r\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\r\n    localStorage.setItem(\"recent_work\", toDoListsString);\r\n  }\r\n  toggleDeleteListConfirmation = () => {\r\n    if (this.state.currentList.items.length != 0) {\r\n      this.setState({\r\n        showModal: !this.state.showModal\r\n      })\r\n    }\r\n  }\r\n  closeList = () => {\r\n    this.setState({\r\n      currentList: {items: []}\r\n    })\r\n  }\r\n  handleListNameChange = (value, id) => {\r\n      this.state.toDoLists.map((list) => (list.id == id ? list.name = value : list.name = list.name));\r\n      this.setState({\r\n        toDoLists:this.state.toDoLists\r\n      })\r\n  }\r\n  getItemAttribute = (id, attribute) => {\r\n    let items = this.state.currentList.items;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].id == id) {\r\n        if (attribute == \"description\") {\r\n          return items[i].description;\r\n        }\r\n        if (attribute == \"dueDate\") {\r\n          return items[i].due_date;\r\n        }\r\n        if (attribute == \"status\") {\r\n          return items[i].status;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return;\r\n  }\r\n  undo = () => {\r\n    console.log(\"undooooo\")\r\n    this.tps.undoTransaction();\r\n  }\r\n  redo = () => {\r\n    this.tps.doTransaction();\r\n  }\r\n  addNewItemTransaction = () => {\r\n    let transaction = new AddNewItem_Transaction(this);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  deleteItemTransaction = (id) => {\r\n    let transaction = new DeleteItem_Transaction(this, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  descriptionChangeTransaction = (value, id) => {\r\n    let transaction = new DescriptionChange_Transaction(this, value, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  dueDateChangeTransaction = (value, id) => {\r\n    let transaction = new DueDateChange_Transaction(this, value, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  statusChangeTransaction = (value, id) => {\r\n    let transaction = new StatusChange_Transaction(this, value, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  moveItemUpTransaction = (id) => {\r\n    let transaction = new MoveItemUp_Transaction(this, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  moveItemDownTransaction = (id) => {\r\n    let transaction = new MoveItemDown_Transaction(this, id);\r\n    this.tps.addTransaction(transaction);\r\n  }\r\n  render() {\r\n    let items = this.state.currentList.items;\r\n    return (\r\n      <div id=\"root\">\r\n        <DeleteListConfirmation\r\n          showModal={this.state.showModal}\r\n          closeModal={this.state.showModal}\r\n          deleteCurrentList={this.deleteCurrentList}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n        />\r\n        <Navbar />\r\n        <LeftSidebar \r\n          toDoLists={this.state.toDoLists}\r\n          loadToDoListCallback={this.loadToDoList}\r\n          addNewListCallback={this.addNewList}\r\n          currentList={this.state.currentList}\r\n          swapToInput={this.swapToInput}\r\n          clickedOn={this.state.clickedOn}\r\n          clickedId={this.state.clickedId}\r\n          handleListNameChange={this.handleListNameChange}\r\n        />\r\n        <Workspace \r\n          toDoListItems={items}\r\n          toggleDeleteListConfirmation = {this.toggleDeleteListConfirmation}\r\n          currentListActive={this.state.currentList.items.length > 0}\r\n          swapToInput={this.swapToInput}\r\n          swapToDiv={this.swapToDiv}\r\n          swapToStatus={this.swapToStatus}\r\n          clickedOn={this.state.clickedOn}\r\n          clickedId={this.state.clickedId}\r\n          addNewItemToList={this.addNewItemTransaction}\r\n          moveItemUp={this.moveItemUpTransaction}\r\n          moveItemDown={this.moveItemDownTransaction}\r\n          deleteItem={this.deleteItemTransaction}\r\n          closeList={this.closeList}\r\n          undo={this.undo}\r\n          redo={this.redo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}