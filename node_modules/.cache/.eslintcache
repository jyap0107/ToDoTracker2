[{"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\index.js":"1","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\App.js":"2","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\reportWebVitals.js":"3","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Workspace.js":"4","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\common\\jsTPS.js":"5","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\LeftSidebar.js":"6","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Navbar.js":"7","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ToDoItem.js":"8","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ListLink.js":"9","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\DeleteListConfirmation.js":"10","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\AddNewItem_Transaction.js":"11","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\DeleteItem_Transaction.js":"12","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\DescriptionChange_Transaction.js":"13","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\DueDateChange_Transaction.js":"14","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\StatusChange_Transaction.js":"15","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\MoveItemUp_Transaction.js":"16","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\MoveItemDown_Transaction.js":"17"},{"size":557,"mtime":1615319207769,"results":"18","hashOfConfig":"19"},{"size":14457,"mtime":1616010929731,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1615319207770,"results":"21","hashOfConfig":"19"},{"size":4157,"mtime":1616011052901,"results":"22","hashOfConfig":"19"},{"size":6712,"mtime":1616008732198,"results":"23","hashOfConfig":"19"},{"size":2206,"mtime":1616011057763,"results":"24","hashOfConfig":"19"},{"size":431,"mtime":1615319207763,"results":"25","hashOfConfig":"19"},{"size":4746,"mtime":1616005641991,"results":"26","hashOfConfig":"19"},{"size":1900,"mtime":1616011223535,"results":"27","hashOfConfig":"19"},{"size":968,"mtime":1615658795779,"results":"28","hashOfConfig":"19"},{"size":423,"mtime":1615928103530,"results":"29","hashOfConfig":"19"},{"size":558,"mtime":1615930136722,"results":"30","hashOfConfig":"19"},{"size":582,"mtime":1616006500696,"results":"31","hashOfConfig":"19"},{"size":574,"mtime":1616006756696,"results":"32","hashOfConfig":"19"},{"size":570,"mtime":1616006872455,"results":"33","hashOfConfig":"19"},{"size":493,"mtime":1616007209748,"results":"34","hashOfConfig":"19"},{"size":492,"mtime":1616007304101,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"a1jfpx",{"filePath":"39","messages":"40","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\index.js",[],["75","76"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\App.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\reportWebVitals.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Workspace.js",["104"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\common\\jsTPS.js",["105","106"],"'use strict'\r\n\r\n/**\r\n * jsTPS_Transaction\r\n * \r\n * This provides the basic structure for a transaction class. Note to use\r\n * jsTPS one should create objects that define these two methods, doTransaction\r\n * and undoTransaction, which will update the application state accordingly.\r\n * \r\n * @author THE McKilla Gorilla (accept no imposters)\r\n * @version 1.0\r\n */\r\nexport class jsTPS_Transaction {\r\n    /**\r\n     * This method is called by jTPS when a transaction is executed.\r\n     */\r\n    doTransaction() {\r\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n    \r\n    /**\r\n     * This method is called by jTPS when a transaction is undone.\r\n     */\r\n    undoTransaction() {\r\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n}\r\n\r\n/**\r\n * jsTPS\r\n * \r\n * This class serves as the Transaction Processing System. Note that it manages\r\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\r\n * state changes for the given application. Note that this TPS is not platform\r\n * specific as it is programmed in raw JavaScript.\r\n */\r\nexport default class jsTPS {\r\n    constructor() {\r\n        // THE TRANSACTION STACK\r\n        this.transactions = [];\r\n\r\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\r\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\r\n        this.numTransactions = 0;\r\n\r\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\r\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\r\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\r\n        // AND STILL COULD BE REDONE.\r\n        this.mostRecentTransaction = -1;\r\n\r\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\r\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\r\n        // MANAGE CONCURRENT UPDATES\r\n        this.performingDo = false;\r\n        this.performingUndo = false;\r\n    }\r\n\r\n    /**\r\n     * isPerformingDo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of a do/redo operation.\r\n     */\r\n    isPerformingDo() {\r\n        return this.performingDo;\r\n    }\r\n\r\n    /**\r\n     * isPerformingUndo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of an undo operation.\r\n     */\r\n    isPerformingUndo() {\r\n        return this.performingUndo;\r\n    }\r\n\r\n    /**\r\n     * getSize\r\n     * \r\n     * Accessor method for getting the number of transactions on the stack.\r\n     */\r\n    getSize() {\r\n        return this.transactions.length;\r\n    }\r\n\r\n    /**\r\n     * getRedoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possibly be redone.\r\n     */\r\n    getRedoSize() {\r\n        return this.getSize() - this.mostRecentTransaction - 1;\r\n    }\r\n\r\n    /**\r\n     * getUndoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possible be undone.\r\n     */\r\n    getUndoSize() {\r\n        return this.mostRecentTransaction + 1;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToRedo\r\n     * \r\n     * Method for getting a boolean representing whether or not\r\n     * there are transactions on the stack that can be redone.\r\n     */\r\n    hasTransactionToRedo() {\r\n        return (this.mostRecentTransaction+1) < this.numTransactions;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToUndo\r\n     * \r\n     * Method for getting a boolean representing whehter or not\r\n     * there are transactions on the stack that can be undone.\r\n     */\r\n    hasTransactionToUndo() {\r\n        return this.mostRecentTransaction >= 0;\r\n    }\r\n\r\n    /**\r\n     * addTransaction\r\n     * \r\n     * Method for adding a transaction to the TPS stack, note it\r\n     * also then does the transaction.\r\n     * \r\n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\r\n     */\r\n    addTransaction(transaction) {\r\n        // ARE WE BRANCHING?\r\n        if ((this.mostRecentTransaction < 0) \r\n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\r\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\r\n                    this.transactions.splice(i, 1);\r\n                }\r\n                this.numTransactions = this.mostRecentTransaction + 2;\r\n        }\r\n        else {\r\n            this.numTransactions++;\r\n        }\r\n\r\n        // ADD THE TRANSACTION\r\n        this.transactions[this.mostRecentTransaction+1] = transaction;\r\n\r\n        // AND EXECUTE IT\r\n        this.doTransaction();\r\n    }\r\n\r\n    /**\r\n     * doTransaction\r\n     * \r\n     * Does the current transaction on the stack and advances the transaction\r\n     * counter. Note this function may be invoked as a result of either adding\r\n     * a transaction (which also does it), or redoing a transaction.\r\n     */\r\n    doTransaction() {\r\n        if (this.hasTransactionToRedo()) {\r\n            this.performingDo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction+1];\r\n            transaction.doTransaction();\r\n            this.mostRecentTransaction++;\r\n            this.performingDo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function gets the most recently executed transaction on the \r\n     * TPS stack and undoes it, moving the TPS counter accordingly.\r\n     */\r\n    undoTransaction() {\r\n        if (this.hasTransactionToUndo()) {\r\n            this.performingUndo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction];\r\n            transaction.undoTransaction();\r\n            this.mostRecentTransaction--;\r\n            this.performingUndo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clearAllTransactions\r\n     * \r\n     * Removes all the transactions from the TPS, leaving it with none.\r\n     */\r\n    clearAllTransactions() {\r\n        // REMOVE ALL THE TRANSACTIONS\r\n        this.transactions = new Array();\r\n        \r\n        // MAKE SURE TO RESET THE LOCATION OF THE\r\n        // TOP OF THE TPS STACK TOO\r\n        this.mostRecentTransaction = -1;      \r\n        this.numTransactions = 0; \r\n    }\r\n\r\n    /**\r\n     * toString\r\n     * \r\n     * Builds and returns a textual represention of the full TPS and its stack.\r\n     */\r\n    toString() {        \r\n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\r\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\r\n        text += \"--Current Transaction Stack:\\n\";\r\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\r\n            let jT = this.transactions[i];\r\n            text += \"----\" + jT.toString() + \"\\n\";\r\n        }\r\n        return text;        \r\n    }\r\n}","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\LeftSidebar.js",["107"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Navbar.js",["108"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"navbar\">\r\n                <div id=\"title-div\">\r\n                    Todo Tracker\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ToDoItem.js",["109","110","111","112","113","114","115","116","117","118","119"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\nimport Close from '@material-ui/icons/Close';\r\n\r\nclass ToDoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = -1;\r\n        // DISPLAY WHERE WE ARE\r\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" constructor\");\r\n        this.textInput = React.createRef();\r\n        this.focusRef = this.focusRef.bind(this);\r\n    }\r\n    focusRef = () => {\r\n        this.textInput.current.focus();\r\n    }\r\n    showIt = () => {\r\n        console.log(\"chocco mate\");\r\n    }\r\n    // hideIt = () => {\r\n    //     this.props.swapToDiv(this, l);\r\n    // }\r\n    render() {\r\n        // DISPLAY WHERE WE ARE\r\n        // console.log(\"\\t\\t\\tToDoItem render\");\r\n        let listItem = this.props.toDoListItem;\r\n        this.id = listItem.id;\r\n        let statusType = \"status-complete\";\r\n        if (listItem.status === \"incomplete\")\r\n            statusType = \"status-incomplete\";\r\n        //Set description\r\n        let description;\r\n        if (this.props.clickedOn == \"description\" && listItem.id == this.props.clickedId) {\r\n            description = <input autoFocus\r\n                className='item-col task-col'\r\n                defaultValue={listItem.description}\r\n                ref={this.textInput}\r\n                onFocus={this.showIt}\r\n                onBlur={(e) => this.props.swapToDiv(listItem.id, e.target.value, \"description\")}\r\n                onClick={this.focusRef}></input>\r\n        }\r\n        else {\r\n            description = <div \r\n            className='item-col task-col'\r\n            onClick={this.props.swapToInput.bind(this, listItem.id, \"description\")}>{listItem.description}\r\n            </div>\r\n        }\r\n        //Set due date\r\n        let dueDate;\r\n        if (this.props.clickedOn == \"dueDate\" && listItem.id == this.props.clickedId) {\r\n            dueDate = <input autoFocus\r\n                className='item-col task-col'\r\n                type=\"date\"\r\n                defaultValue={listItem.due_date}\r\n                ref={this.textInput}\r\n                onFocus={this.showIt}\r\n                onClick={this.focusRef}\r\n                onBlur={(e) => this.props.swapToDiv(listItem.id, e.target.value, \"dueDate\")}></input>\r\n        }\r\n        else {\r\n            dueDate = <div\r\n            className='item-col task-col'\r\n            onClick={this.props.swapToInput.bind(this, listItem.id, \"dueDate\")}>{listItem.due_date}\r\n            </div>\r\n        }\r\n        let status;\r\n        if (this.props.clickedOn == \"status\" && listItem.id == this.props.clickedId) {\r\n            status = <select autoFocus\r\n                className='item-col task-col'\r\n                defaultValue={listItem.status}\r\n                ref={this.textInput}\r\n                onFocus={this.showIt}\r\n                onClick={this.focusRef}\r\n                onBlur={(e) => this.props.swapToDiv(listItem.id, e.target.value, \"status\")}>\r\n                    <option value=\"complete\">Complete</option>\r\n                    <option value=\"incomplete\">Incomplete</option>\r\n                </select>\r\n        }\r\n        else {\r\n            status = <div\r\n            className='item-col task-col'\r\n            className={listItem.status == \"complete\" ? \"item-col task-col yellow\" : \"item-col task-col blue\"}\r\n            onClick={this.props.swapToStatus.bind(this, listItem.id, \"status\")}>{listItem.status}\r\n            </div>\r\n        }\r\n        return (\r\n            <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\r\n                {description}\r\n                {dueDate}\r\n                {status}\r\n                <div className='item-col list-controls-col'>\r\n                    <KeyboardArrowUp \r\n                        className={this.props.position != 0 ? 'list-item-control todo-button' : \"disabled\"}\r\n                        onClick={this.props.moveItemUp.bind(this, listItem.id)} />\r\n                    <KeyboardArrowDown \r\n                        className={this.props.position != this.props.maxPosition ? 'list-item-control todo-button' : \"disabled\"}\r\n                        onClick={this.props.moveItemDown.bind(this, listItem.id)} />\r\n                    <Close \r\n                        className='list-item-control todo-button'\r\n                        onClick={this.props.deleteItem.bind(this, listItem.id)} />\r\n                    <div className='list-item-control'></div>\r\n        <div className='list-item-control'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoItem;","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ListLink.js",["120","121","122","123","124"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\DeleteListConfirmation.js",["125"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\n\r\nclass DeleteListConfirmation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    onClose = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        if (!this.props.showModal) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div id=\"modal-container\">\r\n                <div id=\"modal-content\">\r\n                    <div class=\"delete-text\">Confirm Delete</div>\r\n                    <div id=\"delete-choices\">\r\n                        <div id=\"confirm-delete-button\" class=\"delete-text\" onClick={this.props.deleteCurrentList}>Confirm</div>\r\n                        <div id=\"cancel-delete-button\" class=\"delete-text\" onClick={this.props.toggleDeleteListConfirmation}>Cancel</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteListConfirmation;","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\AddNewItem_Transaction.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\DeleteItem_Transaction.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\DescriptionChange_Transaction.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\DueDateChange_Transaction.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\StatusChange_Transaction.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\MoveItemUp_Transaction.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\transactions\\MoveItemDown_Transaction.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":18,"column":1,"nodeType":"132","messageId":"133","endLine":21,"endColumn":4},{"ruleId":"134","severity":1,"message":"135","line":173,"column":14,"nodeType":"136","messageId":"137","endLine":173,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":175,"column":9,"nodeType":"140","endLine":175,"endColumn":37},{"ruleId":"138","severity":1,"message":"139","line":176,"column":9,"nodeType":"140","endLine":176,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":186,"column":14,"nodeType":"136","messageId":"137","endLine":186,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":188,"column":9,"nodeType":"140","endLine":188,"endColumn":37},{"ruleId":"138","severity":1,"message":"139","line":189,"column":9,"nodeType":"140","endLine":189,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":201,"column":46,"nodeType":"136","messageId":"137","endLine":201,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":220,"column":19,"nodeType":"136","messageId":"137","endLine":220,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":223,"column":19,"nodeType":"136","messageId":"137","endLine":223,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":226,"column":19,"nodeType":"136","messageId":"137","endLine":226,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":229,"column":19,"nodeType":"136","messageId":"137","endLine":229,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":240,"column":58,"nodeType":"136","messageId":"137","endLine":240,"endColumn":60},{"ruleId":"141","severity":1,"message":"142","line":240,"column":112,"nodeType":"140","messageId":"143","endLine":240,"endColumn":128},{"ruleId":"134","severity":1,"message":"135","line":249,"column":58,"nodeType":"136","messageId":"137","endLine":249,"endColumn":60},{"ruleId":"141","severity":1,"message":"144","line":249,"column":106,"nodeType":"140","messageId":"143","endLine":249,"endColumn":119},{"ruleId":"134","severity":1,"message":"135","line":258,"column":58,"nodeType":"136","messageId":"137","endLine":258,"endColumn":60},{"ruleId":"141","severity":1,"message":"145","line":258,"column":102,"nodeType":"140","messageId":"143","endLine":258,"endColumn":113},{"ruleId":"134","severity":1,"message":"135","line":288,"column":51,"nodeType":"136","messageId":"137","endLine":288,"endColumn":53},{"ruleId":"141","severity":1,"message":"146","line":288,"column":91,"nodeType":"140","messageId":"143","endLine":288,"endColumn":100},{"ruleId":"134","severity":1,"message":"135","line":298,"column":23,"nodeType":"136","messageId":"137","endLine":298,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":299,"column":23,"nodeType":"136","messageId":"137","endLine":299,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":302,"column":23,"nodeType":"136","messageId":"137","endLine":302,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":305,"column":23,"nodeType":"136","messageId":"137","endLine":305,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":345,"column":15,"nodeType":"136","messageId":"137","endLine":345,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":360,"column":15,"nodeType":"136","messageId":"137","endLine":360,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":375,"column":15,"nodeType":"136","messageId":"137","endLine":375,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":11,"column":5,"nodeType":"149","messageId":"150","endLine":13,"endColumn":6},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13,"fix":"155"},{"ruleId":"156","severity":1,"message":"157","line":194,"column":29,"nodeType":"158","messageId":"159","endLine":194,"endColumn":40},{"ruleId":"147","severity":1,"message":"148","line":7,"column":5,"nodeType":"149","messageId":"150","endLine":9,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":5,"column":5,"nodeType":"149","messageId":"150","endLine":7,"endColumn":6},{"ruleId":"160","severity":1,"message":"161","line":32,"column":13,"nodeType":"162","messageId":"163","endLine":32,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":35,"column":34,"nodeType":"136","messageId":"137","endLine":35,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":35,"column":66,"nodeType":"136","messageId":"137","endLine":35,"endColumn":68},{"ruleId":"134","severity":1,"message":"135","line":52,"column":34,"nodeType":"136","messageId":"137","endLine":52,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":52,"column":62,"nodeType":"136","messageId":"137","endLine":52,"endColumn":64},{"ruleId":"134","severity":1,"message":"135","line":69,"column":34,"nodeType":"136","messageId":"137","endLine":69,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":69,"column":61,"nodeType":"136","messageId":"137","endLine":69,"endColumn":63},{"ruleId":"164","severity":1,"message":"165","line":84,"column":13,"nodeType":"166","endLine":84,"endColumn":110},{"ruleId":"134","severity":1,"message":"135","line":84,"column":40,"nodeType":"136","messageId":"137","endLine":84,"endColumn":42},{"ruleId":"134","severity":1,"message":"167","line":95,"column":56,"nodeType":"136","messageId":"137","endLine":95,"endColumn":58},{"ruleId":"134","severity":1,"message":"167","line":98,"column":56,"nodeType":"136","messageId":"137","endLine":98,"endColumn":58},{"ruleId":"134","severity":1,"message":"135","line":29,"column":34,"nodeType":"136","messageId":"137","endLine":29,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":29,"column":66,"nodeType":"136","messageId":"137","endLine":29,"endColumn":68},{"ruleId":"134","severity":1,"message":"135","line":31,"column":47,"nodeType":"136","messageId":"137","endLine":31,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":39,"column":47,"nodeType":"136","messageId":"137","endLine":39,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":40,"column":36,"nodeType":"136","messageId":"137","endLine":40,"endColumn":38},{"ruleId":"147","severity":1,"message":"148","line":5,"column":5,"nodeType":"149","messageId":"150","endLine":7,"endColumn":6},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-self-assign","'item.description' is assigned to itself.","selfAssignment","'item.due_date' is assigned to itself.","'item.status' is assigned to itself.","'list.name' is assigned to itself.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"170","text":"171"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'statusType' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",[0,12],""]