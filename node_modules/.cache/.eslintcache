[{"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\index.js":"1","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\App.js":"2","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\reportWebVitals.js":"3","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Workspace.js":"4","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\common\\jsTPS.js":"5","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\LeftSidebar.js":"6","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Navbar.js":"7","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ToDoItem.js":"8","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ListLink.js":"9","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\DeleteListConfirmation.js":"10"},{"size":557,"mtime":1615319207769,"results":"11","hashOfConfig":"12"},{"size":9037,"mtime":1615857570941,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1615319207770,"results":"14","hashOfConfig":"12"},{"size":3672,"mtime":1615838067097,"results":"15","hashOfConfig":"12"},{"size":6712,"mtime":1615319207761,"results":"16","hashOfConfig":"12"},{"size":1994,"mtime":1615857285419,"results":"17","hashOfConfig":"12"},{"size":431,"mtime":1615319207763,"results":"18","hashOfConfig":"12"},{"size":5030,"mtime":1615854032316,"results":"19","hashOfConfig":"12"},{"size":1665,"mtime":1615866486295,"results":"20","hashOfConfig":"12"},{"size":968,"mtime":1615658795779,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"a1jfpx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\index.js",[],["49","50"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\App.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\reportWebVitals.js",[],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Workspace.js",["69","70"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\nimport ToDoItem from './ToDoItem'\r\nimport Undo from '@material-ui/icons/Undo';\r\nimport Redo from '@material-ui/icons/Redo';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport Close from '@material-ui/icons/Close';\r\n\r\nclass Workspace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleClick() {\r\n        \r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"workspace\">\r\n                <div id=\"todo-list-header-card\" className=\"list-item-card\">\r\n                    <div id=\"task-col-header\" className=\"item-col todo-button\">Task</div>\r\n                    <div id=\"date-col-header\" className=\"item-col todo-button\">Due Date</div>\r\n                    <div id=\"status-col-header\" className=\"item-col todo-button\">Status</div>\r\n                    <div id=\"list-control-header\" className=\"item-col\" display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\">\r\n                        <Undo id=\"undo-button\" className=\"list-item-control material-icons todo-button\" />\r\n                        {/* Can just check currentList = null and handle everything there. */}\r\n                        <Redo id=\"redo-button\" className=\"list-item-control material-icons todo-button\" />\r\n                        <AddBox id=\"add-item-button\" className=\"list-item-control material-icons todo-button\"\r\n                        onClick={this.props.addNewItemToList} />\r\n                        <Delete \r\n                            id={this.props.currentListActive ? \"delete-list-button\" : \"\"} className=\"material-icons\"\r\n                            className = {this.props.currentListActive ? \"todo-button list-item-control\" : \"\"}\r\n                            // perhaps ternary onclick\r\n                            onClick = {this.props.toggleDeleteListConfirmation}/>\r\n                        <Close\r\n                            id=\"close-list-button\"\r\n                            className=\"list-item-control material-icons todo-button\"\r\n                            onClick={this.props.closeList} />\r\n                    </div>\r\n                </div>\r\n                <div id=\"todo-list-items-div\">\r\n                    {\r\n                        this.props.toDoListItems.map((toDoListItem) => (\r\n                        <ToDoItem\r\n                            position={this.props.toDoListItems.indexOf(toDoListItem)}\r\n                            maxPosition={this.props.toDoListItems.length - 1}\r\n                            key={toDoListItem.id}\r\n                            toDoListItem={toDoListItem}\r\n                            swapToInput={this.props.swapToInput}     // PASS THE ITEM TO THE CHILDREN\r\n                            swapToDiv={this.props.swapToDiv}\r\n                            swapToStatus={this.props.swapToStatus}\r\n                            clickedOn={this.props.clickedOn}\r\n                            clickedId={this.props.clickedId}\r\n                            handleDescriptionChange={this.props.handleDescriptionChange}\r\n                            handleDueDateChange={this.props.handleDueDateChange}\r\n                            handleStatusChange={this.props.handleStatusChange}\r\n                            moveItemUp={this.props.moveItemUp}\r\n                            moveItemDown={this.props.moveItemDown}\r\n                            deleteItem={this.props.deleteItem}\r\n                        />))\r\n                    }\r\n                </div>\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Workspace;","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\common\\jsTPS.js",["71","72"],"'use strict'\r\n\r\n/**\r\n * jsTPS_Transaction\r\n * \r\n * This provides the basic structure for a transaction class. Note to use\r\n * jsTPS one should create objects that define these two methods, doTransaction\r\n * and undoTransaction, which will update the application state accordingly.\r\n * \r\n * @author THE McKilla Gorilla (accept no imposters)\r\n * @version 1.0\r\n */\r\nexport class jsTPS_Transaction {\r\n    /**\r\n     * This method is called by jTPS when a transaction is executed.\r\n     */\r\n    doTransaction() {\r\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n    \r\n    /**\r\n     * This method is called by jTPS when a transaction is undone.\r\n     */\r\n    undoTransaction() {\r\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n}\r\n\r\n/**\r\n * jsTPS\r\n * \r\n * This class serves as the Transaction Processing System. Note that it manages\r\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\r\n * state changes for the given application. Note that this TPS is not platform\r\n * specific as it is programmed in raw JavaScript.\r\n */\r\nexport default class jsTPS {\r\n    constructor() {\r\n        // THE TRANSACTION STACK\r\n        this.transactions = [];\r\n\r\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\r\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\r\n        this.numTransactions = 0;\r\n\r\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\r\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\r\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\r\n        // AND STILL COULD BE REDONE.\r\n        this.mostRecentTransaction = -1;\r\n\r\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\r\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\r\n        // MANAGE CONCURRENT UPDATES\r\n        this.performingDo = false;\r\n        this.performingUndo = false;\r\n    }\r\n\r\n    /**\r\n     * isPerformingDo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of a do/redo operation.\r\n     */\r\n    isPerformingDo() {\r\n        return this.performingDo;\r\n    }\r\n\r\n    /**\r\n     * isPerformingUndo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of an undo operation.\r\n     */\r\n    isPerformingUndo() {\r\n        return this.performingUndo;\r\n    }\r\n\r\n    /**\r\n     * getSize\r\n     * \r\n     * Accessor method for getting the number of transactions on the stack.\r\n     */\r\n    getSize() {\r\n        return this.transactions.length;\r\n    }\r\n\r\n    /**\r\n     * getRedoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possibly be redone.\r\n     */\r\n    getRedoSize() {\r\n        return this.getSize() - this.mostRecentTransaction - 1;\r\n    }\r\n\r\n    /**\r\n     * getUndoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possible be undone.\r\n     */\r\n    getUndoSize() {\r\n        return this.mostRecentTransaction + 1;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToRedo\r\n     * \r\n     * Method for getting a boolean representing whether or not\r\n     * there are transactions on the stack that can be redone.\r\n     */\r\n    hasTransactionToRedo() {\r\n        return (this.mostRecentTransaction+1) < this.numTransactions;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToUndo\r\n     * \r\n     * Method for getting a boolean representing whehter or not\r\n     * there are transactions on the stack that can be undone.\r\n     */\r\n    hasTransactionToUndo() {\r\n        return this.mostRecentTransaction >= 0;\r\n    }\r\n\r\n    /**\r\n     * addTransaction\r\n     * \r\n     * Method for adding a transaction to the TPS stack, note it\r\n     * also then does the transaction.\r\n     * \r\n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\r\n     */\r\n    addTransaction(transaction) {\r\n        // ARE WE BRANCHING?\r\n        if ((this.mostRecentTransaction < 0) \r\n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\r\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\r\n                    this.transactions.splice(i, 1);\r\n                }\r\n                this.numTransactions = this.mostRecentTransaction + 2;\r\n        }\r\n        else {\r\n            this.numTransactions++;\r\n        }\r\n\r\n        // ADD THE TRANSACTION\r\n        this.transactions[this.mostRecentTransaction+1] = transaction;\r\n\r\n        // AND EXECUTE IT\r\n        this.doTransaction();\r\n    }\r\n\r\n    /**\r\n     * doTransaction\r\n     * \r\n     * Does the current transaction on the stack and advances the transaction\r\n     * counter. Note this function may be invoked as a result of either adding\r\n     * a transaction (which also does it), or redoing a transaction.\r\n     */\r\n    doTransaction() {\r\n        if (this.hasTransactionToRedo()) {\r\n            this.performingDo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction+1];\r\n            transaction.doTransaction();\r\n            this.mostRecentTransaction++;\r\n            this.performingDo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function gets the most recently executed transaction on the \r\n     * TPS stack and undoes it, moving the TPS counter accordingly.\r\n     */\r\n    undoTransaction() {\r\n        if (this.hasTransactionToUndo()) {\r\n            this.performingUndo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction];\r\n            transaction.undoTransaction();\r\n            this.mostRecentTransaction--;\r\n            this.performingUndo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clearAllTransactions\r\n     * \r\n     * Removes all the transactions from the TPS, leaving it with none.\r\n     */\r\n    clearAllTransactions() {\r\n        // REMOVE ALL THE TRANSACTIONS\r\n        this.transactions = new Array();\r\n        \r\n        // MAKE SURE TO RESET THE LOCATION OF THE\r\n        // TOP OF THE TPS STACK TOO\r\n        this.mostRecentTransaction = -1;      \r\n        this.numTransactions = 0; \r\n    }\r\n\r\n    /**\r\n     * toString\r\n     * \r\n     * Builds and returns a textual represention of the full TPS and its stack.\r\n     */\r\n    toString() {        \r\n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\r\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\r\n        text += \"--Current Transaction Stack:\\n\";\r\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\r\n            let jT = this.transactions[i];\r\n            text += \"----\" + jT.toString() + \"\\n\";\r\n        }\r\n        return text;        \r\n    }\r\n}","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\LeftSidebar.js",["73"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport ListLink from './ListLink'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\nclass LeftSidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleAddNewList = () => {\r\n        this.props.addNewListCallback();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"left-sidebar\">\r\n                <div id=\"left-sidebar-header\" class=\"section-header\">\r\n                    <span class=\"left-sidebar-header-text\">Todolists</span>\r\n                    <span class=\"left-sidebar-controls\" id=\"add-undo-redo-box\">\r\n                        <AddBox \r\n                            id=\"add-list-button\"\r\n                            className=\"material-icons todo_button\"\r\n                            onClick={this.handleAddNewList} />\r\n                    </span>\r\n                </div>\r\n                <div id=\"todo-lists-list\">\r\n                {\r\n                    this.props.toDoLists.map((toDoList) => (\r\n                        <ListLink\r\n                            key={toDoList.id}\r\n                            id={toDoList.id}\r\n                            clickedOn={this.props.clickedOn}\r\n                            clickedId={this.props.clickedId}\r\n                            position={this.props.toDoLists.indexOf(toDoList)}\r\n                            swapToInput={this.props.swapToInput}\r\n                            currentList={this.props.currentList}\r\n                            toDoList={toDoList}                                // PASS THE LIST TO THE CHILDREN\r\n                            loadToDoListCallback={this.props.loadToDoListCallback}\r\n                            handleListNameChange={this.props.handleListNameChange} />  // PASS THE CALLBACK TO THE CHILDREN\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftSidebar;","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\Navbar.js",["74"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"navbar\">\r\n                <div id=\"title-div\">\r\n                    Todo Tracker\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ToDoItem.js",["75","76","77","78","79","80","81","82","83","84","85"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\nimport Close from '@material-ui/icons/Close';\r\n\r\nclass ToDoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = -1;\r\n        // DISPLAY WHERE WE ARE\r\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" constructor\");\r\n        // Detect outside click\r\n        // this.wrapperRef = React.createRef();\r\n        // this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        // this.handleClickOutside = this.handleClickOutside.bind(this, this.props.swapToDiv);\r\n    }\r\n    // setWrapperRef(node) {\r\n    //     this.wrapperRef = node;\r\n    //   }\r\n    // componentDidMount = () => {\r\n    //     // DISPLAY WHERE WE ARE\r\n    //     console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" did mount\");\r\n    //     document.addEventListener('mousedown', this.handleClickOutside);\r\n    // }\r\n    // componentWillUnmount = () => {\r\n    //     document.removeEventListener('mousedown', this.handleClickOutside);\r\n    // }\r\n    // handleClickOutside(event) {\r\n    //     if (this.wrapperRef && typeof this.wrapperRef.current === 'undefined' && !this.wrapperRef.contains(event.target)){\r\n    //         [Somehow insert callback here?]\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        // DISPLAY WHERE WE ARE\r\n        // console.log(\"\\t\\t\\tToDoItem render\");\r\n        let listItem = this.props.toDoListItem;\r\n        this.id = listItem.id;\r\n        let statusType = \"status-complete\";\r\n        if (listItem.status === \"incomplete\")\r\n            statusType = \"status-incomplete\";\r\n        //Set description\r\n        let description;\r\n        if (this.props.clickedOn == \"description\" && listItem.id == this.props.clickedId) {\r\n            description = <input\r\n                ref={this.setWrapperRef} \r\n                className='item-col task-col'\r\n                defaultValue={listItem.description} \r\n                onChange={(e) => this.props.handleDescriptionChange(e.target.value, listItem.id)}></input>\r\n        }\r\n        else {\r\n            description = <div \r\n            className='item-col task-col'\r\n            onClick={this.props.swapToInput.bind(this, listItem.id, \"description\")}>{listItem.description}\r\n            </div>\r\n        }\r\n        //Set due date\r\n        let dueDate;\r\n        if (this.props.clickedOn == \"dueDate\" && listItem.id == this.props.clickedId) {\r\n            dueDate = <input\r\n                className='item-col task-col'\r\n                type=\"date\"\r\n                defaultValue={listItem.due_date}\r\n                onChange={(e) => this.props.handleDueDateChange(e.target.value, listItem.id)}></input>\r\n        }\r\n        else {\r\n            dueDate = <div\r\n            className='item-col task-col'\r\n            onClick={this.props.swapToInput.bind(this, listItem.id, \"dueDate\")}>{listItem.due_date}\r\n            </div>\r\n        }\r\n        let status;\r\n        if (this.props.clickedOn == \"status\" && listItem.id == this.props.clickedId) {\r\n            status = <select\r\n                className='item-col task-col'\r\n                defaultValue={listItem.status}\r\n                onChange={(e) => this.props.handleStatusChange(e.target.value, listItem.id)}>\r\n                    <option value=\"complete\">Complete</option>\r\n                    <option value=\"incomplete\">Incomplete</option>\r\n                </select>\r\n        }\r\n        else {\r\n            status = <div\r\n            className='item-col task-col'\r\n            className={listItem.status == \"complete\" ? \"item-col task-col yellow\" : \"item-col task-col blue\"}\r\n            onClick={this.props.swapToStatus.bind(this, listItem.id, \"status\")}>{listItem.status}\r\n            </div>\r\n        }\r\n        return (\r\n            <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\r\n                {description}\r\n                {dueDate}\r\n                {status}\r\n                <div className='item-col list-controls-col'>\r\n                    <KeyboardArrowUp \r\n                        className={this.props.position != 0 ? 'list-item-control todo-button' : \"disabled\"}\r\n                        onClick={this.props.moveItemUp.bind(this, listItem.id)} />\r\n                    <KeyboardArrowDown \r\n                        className={this.props.position != this.props.maxPosition ? 'list-item-control todo-button' : \"disabled\"}\r\n                        onClick={this.props.moveItemDown.bind(this, listItem.id)} />\r\n                    <Close \r\n                        className='list-item-control todo-button'\r\n                        onClick={this.props.deleteItem.bind(this, listItem.id)} />\r\n                    <div className='list-item-control'></div>\r\n        <div className='list-item-control'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoItem;","C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\ListLink.js",["86","87","88","89","90","91"],"C:\\Users\\johnn\\cse316hw2\\todo_tracker_hw2\\src\\components\\DeleteListConfirmation.js",["92"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react'\r\n\r\nclass DeleteListConfirmation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    onClose = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        if (!this.props.showModal) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div id=\"modal-container\">\r\n                <div id=\"modal-content\">\r\n                    <div class=\"delete-text\">Confirm Delete</div>\r\n                    <div id=\"delete-choices\">\r\n                        <div id=\"confirm-delete-button\" class=\"delete-text\" onClick={this.props.deleteCurrentList}>Confirm</div>\r\n                        <div id=\"cancel-delete-button\" class=\"delete-text\" onClick={this.props.toggleDeleteListConfirmation}>Cancel</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteListConfirmation;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":11,"column":1,"nodeType":"99","messageId":"100","endLine":14,"endColumn":4},{"ruleId":"101","severity":1,"message":"102","line":143,"column":14,"nodeType":"103","messageId":"104","endLine":143,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":145,"column":9,"nodeType":"107","endLine":145,"endColumn":37},{"ruleId":"105","severity":1,"message":"106","line":146,"column":9,"nodeType":"107","endLine":146,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":156,"column":14,"nodeType":"103","messageId":"104","endLine":156,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":158,"column":9,"nodeType":"107","endLine":158,"endColumn":37},{"ruleId":"105","severity":1,"message":"106","line":159,"column":9,"nodeType":"107","endLine":159,"endColumn":37},{"ruleId":"101","severity":1,"message":"108","line":168,"column":77,"nodeType":"103","messageId":"104","endLine":168,"endColumn":79},{"ruleId":"105","severity":1,"message":"106","line":169,"column":5,"nodeType":"107","endLine":169,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":194,"column":58,"nodeType":"103","messageId":"104","endLine":194,"endColumn":60},{"ruleId":"109","severity":1,"message":"110","line":194,"column":112,"nodeType":"107","messageId":"111","endLine":194,"endColumn":128},{"ruleId":"101","severity":1,"message":"102","line":198,"column":58,"nodeType":"103","messageId":"104","endLine":198,"endColumn":60},{"ruleId":"109","severity":1,"message":"112","line":198,"column":106,"nodeType":"107","messageId":"111","endLine":198,"endColumn":119},{"ruleId":"101","severity":1,"message":"102","line":202,"column":58,"nodeType":"103","messageId":"104","endLine":202,"endColumn":60},{"ruleId":"109","severity":1,"message":"113","line":202,"column":102,"nodeType":"107","messageId":"111","endLine":202,"endColumn":113},{"ruleId":"101","severity":1,"message":"108","line":216,"column":45,"nodeType":"103","messageId":"104","endLine":216,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":230,"column":51,"nodeType":"103","messageId":"104","endLine":230,"endColumn":53},{"ruleId":"109","severity":1,"message":"114","line":230,"column":91,"nodeType":"107","messageId":"111","endLine":230,"endColumn":100},{"ruleId":"115","severity":1,"message":"116","line":11,"column":5,"nodeType":"117","messageId":"118","endLine":13,"endColumn":6},{"ruleId":"119","severity":1,"message":"120","line":33,"column":29,"nodeType":"121","endLine":33,"endColumn":110},{"ruleId":"122","severity":1,"message":"123","line":1,"column":1,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13,"fix":"126"},{"ruleId":"127","severity":1,"message":"128","line":194,"column":29,"nodeType":"129","messageId":"130","endLine":194,"endColumn":40},{"ruleId":"115","severity":1,"message":"116","line":7,"column":5,"nodeType":"117","messageId":"118","endLine":9,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":5,"column":5,"nodeType":"117","messageId":"118","endLine":7,"endColumn":6},{"ruleId":"131","severity":1,"message":"132","line":42,"column":13,"nodeType":"133","messageId":"134","endLine":42,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":45,"column":34,"nodeType":"103","messageId":"104","endLine":45,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":45,"column":66,"nodeType":"103","messageId":"104","endLine":45,"endColumn":68},{"ruleId":"101","severity":1,"message":"102","line":60,"column":34,"nodeType":"103","messageId":"104","endLine":60,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":60,"column":62,"nodeType":"103","messageId":"104","endLine":60,"endColumn":64},{"ruleId":"101","severity":1,"message":"102","line":74,"column":34,"nodeType":"103","messageId":"104","endLine":74,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":74,"column":61,"nodeType":"103","messageId":"104","endLine":74,"endColumn":63},{"ruleId":"119","severity":1,"message":"120","line":86,"column":13,"nodeType":"121","endLine":86,"endColumn":110},{"ruleId":"101","severity":1,"message":"102","line":86,"column":40,"nodeType":"103","messageId":"104","endLine":86,"endColumn":42},{"ruleId":"101","severity":1,"message":"108","line":97,"column":56,"nodeType":"103","messageId":"104","endLine":97,"endColumn":58},{"ruleId":"101","severity":1,"message":"108","line":100,"column":56,"nodeType":"103","messageId":"104","endLine":100,"endColumn":58},{"ruleId":"115","severity":1,"message":"116","line":5,"column":5,"nodeType":"117","messageId":"118","endLine":9,"endColumn":6},{"ruleId":"101","severity":1,"message":"102","line":24,"column":34,"nodeType":"103","messageId":"104","endLine":24,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":24,"column":66,"nodeType":"103","messageId":"104","endLine":24,"endColumn":68},{"ruleId":"101","severity":1,"message":"102","line":26,"column":47,"nodeType":"103","messageId":"104","endLine":26,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":34,"column":47,"nodeType":"103","messageId":"104","endLine":34,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":35,"column":36,"nodeType":"103","messageId":"104","endLine":35,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":5,"column":5,"nodeType":"117","messageId":"118","endLine":7,"endColumn":6},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Expected '!==' and instead saw '!='.","no-self-assign","'item.description' is assigned to itself.","selfAssignment","'item.due_date' is assigned to itself.","'item.status' is assigned to itself.","'list.name' is assigned to itself.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"137","text":"138"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'statusType' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",[0,12],""]